{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["&","algorithm","alogorithms,","array","backtrack","bf","code","common","data","df","dynam","found","graph","greedi","heap","https://github.com/brofu/leetcod","introduct","leetcod","list","note","practic","problems.","program","repo:","review","sort","stack","string","structur","tree"],"01-data_structures/readme.html":["data","structur"],"01-data_structures/000-array.html":["%","(r1)","*","*util","+","0","0,","0，把索引左闭右开区间","1.1","1.2","1.我们在字符串","1010.","1011.","1062.","1423.","159.","167.","2","2.我们先不断地增加","2/","2506.","259","26.","27.","283.","2d","3","3.","3.此时，我们停止增加","30","303.","304.","315.","327.","34.","344.","395.","4.重复第","424.","493.","5.","60","60.","674.","704.","76","76.","83.","875.","88.","=","==","[left,","abstract","action/","action/merg","advanc","also.","array","banana","binari","bitmask","border","both","break","bs","calcul","capac","card","case","case*","case:","central","charact","check","clearli","code","comment","common","conquer","contain","continu","control","convert","count","d","day","differ","distinct","divid","divis","doubl","down","duplic","durat","eat","edg","element","exampl","example,","extend","extend,","fast","faster","find","first","framework","framework.","hard","head","high","https://labuladong.online/algo/essenti","https://labuladong.online/algo/frequ","https://labuladong.online/algo/practic","idea","ii","immut","includ","increas","index","index*","input","insert","interview/binari","it'","k","key","koko","last","left","left，我们都要更新一轮结果。","length","li","list","logic","logic.","longest","loop","low","math","maximum","mayb","merg","merge.","mergesort","minimum","move","n","nil","note","nsum","num","number","obtain","oper","other","packag","pad","pair","palindrom","pivot","point","pointer","pointers,","posit","possibl","prefix","presum","principl","problem","problem.","problems/skil","pv1","pv1.","queri","quick","r1.","rang","refer","reference:","relat","remov","repeat","replac","result","revers","right","right)","right)?","right)，直到窗口中的字符串不再符合要求（不包含","right)，直到窗口中的字符串符合要求（包含了","right,","right]","right],","right，转而不断增加","s","same","scenarios.","search","segment","self","set","ship","show","shrunk","shrunk,","side","similar","slide","slow","smaller","solut","song","sort","sort*","sort/","sort://labuladong.online/algo/data","standard","stop","string","structure/prefix","sub","subsequ","substr","sum","sum/","summari","support","t","technique/array","technique/binari","technique/slid","time","total","tree","tree*","two","type","v2","valid","var","version","window","within","without","work","workflow","zero","个链表节点等问题，它们都是通过一个","中使用双指针中的左右指针技巧，初始化","中的所有字符了）。同时，每次增加","中的所有字符）。","到达字符串","和第","在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：左右指针和快慢指针。","在数组中并没有真正意义上的指针，但我们可以把索引当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的双指针算法。","对于单链表来说，大部分技巧都属于快慢指针，单链表的六大解题套路","快指针和一个","慢指针配合完成任务。","所谓左右指针，就是两个指针相向而行或者相背而行；","找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧","指针扩大窗口","指针缩小窗口","步在优化这个「可行解」，最终找到最优解.","步相当于在寻找一个「可行解」，然后第","步，直到","的尽头。","称为一个「窗口」。","第","而所谓快慢指针，就是两个指针同向而行，一快一慢。(滑动窗口是快慢指针的一个类型)","都涵盖了，比如链表环判断，倒数第"],"01-data_structures/050-string.html":["*","*util","+","0","0,","0，把索引左闭右开区间","1.1","1.2","1.我们在字符串","1062.","125.","1423.","159.","167.","2","2.我们先不断地增加","2/","214.","26.","27.","283.","3","3.","3.此时，我们停止增加","344.","395.","4.重复第","424.","5.","680.","76","76.","83.","=","==","[left,","advanc","also.","approach","array","binari","both","card","case","case*","central","charact","check","clearli","code","comment","convert","differ","distinct","doubl","duplic","edg","element","exampl","example,","extend","extend,","fast","faster","framework","framework.","hard","head","https://labuladong.online/algo/essenti","idea","ii","index","input","it'","k","key","kmp?","left","left，我们都要更新一轮结果。","length","list","logic","logic.","longest","loop","maximum","mayb","minimum","move","nil","note","obtain","oper","other","pad","palindrom","point","pointer","pointers,","possibl","principl","problem","problem.","pv1","pv1.","recurs","refer","remov","repeat","replac","result","revers","right","right)","right)，直到窗口中的字符串不再符合要求（不包含","right)，直到窗口中的字符串符合要求（包含了","right,","right，转而不断增加","s","same","scenarios.","search","shortest","show","shrunk","shrunk,","side","similar","slide","slow","solut","sort","standard","stop","string","substr","sum","summari","support","t","technique/array","technique/slid","time","two","v2","valid","var","version","window","without","workflow","zero","个链表节点等问题，它们都是通过一个","中使用双指针中的左右指针技巧，初始化","中的所有字符了）。同时，每次增加","中的所有字符）。","到达字符串","和第","在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：左右指针和快慢指针。","在数组中并没有真正意义上的指针，但我们可以把索引当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的双指针算法。","对于单链表来说，大部分技巧都属于快慢指针，单链表的六大解题套路","快指针和一个","慢指针配合完成任务。","所谓左右指针，就是两个指针相向而行或者相背而行；","找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧","指针扩大窗口","指针缩小窗口","步在优化这个「可行解」，最终找到最优解.","步相当于在寻找一个「可行解」，然后第","步，直到","的尽头。","称为一个「窗口」。","第","而所谓快慢指针，就是两个指针同向而行，一快一慢。(滑动窗口是快慢指针的一个类型)","都涵盖了，比如链表环判断，倒数第"],"01-data_structures/100-list.html":["list"],"01-data_structures/200-tree.html":["&","(in","(same","*","+","+=","1","1.","1038)","105.","108.","1257.","1382.","1530.","1650","1650.","1、是否可以通过遍历一遍二叉树得到答案？如果可以，用一个","2","2(n*logn)","2.","235.","236","236.","2h","2、是否可以定义一个递归函数，通过子问题（子树）的答案推导出原问题的答案？如果可以，写出这个递归函数的定义，并充分利用这个函数的返回值，这叫「分解问题」的思维模式。","314.","662.","95.","96.","993.","==",">","accord","ancestor","anoth","approach","approach.","array","attent","balanc","base","between","bf","binari","bit","bit:","both","bound","boundari","bst","bt","calcul","case","charact","check","child.","children","children,","children.","closur","code","column","comment","common","compar","complet","complex","complexity:","construct","convert","copi","count","cousin","current","cursive.","delet","df","dfs,","dfs.","dfs2.","dft","diamet","differ","distance?","doesn't","duplic","each","edg","effect","element","exampl","except","extend","far","fill","find","first","flat","flatten","follow","full","gener","good","greater","h.","height","high","https://labuladong.online/algo/data","i+1","id","idea","ii","ii.","iii","inclus","index","inord","insert","insert/delet","into/from","it'","it.","iv","keep","key","kth","largest","last","last,","lc1038.","lc106.","lc114.","lc116.","lc117.","lc1664.","lc1664??","lc1676.","lc230.","lc315","lc315.","lc450.","lc493.","lc538.","lc652.","lc654.","lc700.","lc701.","lc889.","lc98.","leaf","left","left,","level","level,","link","link.","list","list:","loop","low","lowest","map:","max_depth_of_right_subtree)","maximum","memo","merg","middl","multipl","next","nil","node","node,","none","normal","number","numbersumofsubtre","o(1)","o(cons).","o(n)","o(n),","o(n).","o(n*logn)","o(nlogn)2","on","oper","order","order)","order,","pair","paramet","parent","part3/","pass","path","pattern","pay","perfect","point","point.","pointer","points.","popul","possibl","possible.","post","postord","pre","preorder","principl","problem","problem?","public","queri","queue","recurs","recursively.","reduc","refer","region","relat","resolv","revers","right","root","s:","same","search","self","sentinel.","seril","set","setup","signatur","similar","situat","situations:","slice","smaller","smallest","solut","solution.","sort","sort:","sort?","space","space:","structure/bst","sub","subtre","sum(max_depth_of_left_subtree,","t:","target","task","then,","think","time:","track","travers","traverse.","traverse...","tree","tree,","tree.","trees.","uniqu","up","updat","us","usual","util","valid","valu","vertic","widt","width","wikipedia,","work","二叉树解题的思维模式分两类：","函数配合外部变量来实现，这叫「遍历」的思维模式。","如果单独抽出一个二叉树节点，它需要做什么事情？需要在什么时候（前/中/后序位置）做？其他的节点不用你操心，递归函数会帮你在所有节点上执行相同的操作。","无论使用哪种思维模式，你都需要思考："],"01-data_structures/400-heap.html":["(if","(完全二叉树)","1.","2.","215.","295.","3.","again)","array","binari","built","code","comment","down","element","exampl","go","heap","heap.","keep","key","kth","largest","max","median","min","need","oper","order","ordered,","packag","pattern","point","possibl","present","principl","problem","quick","select","sink","solut","sort","sort.","stream","swim","think","typic","up","us"],"02-algorithms/readme.html":["algorithm","backtrack","bf","classic","df","dynam","includ","limit","note","parenthes","problem","problem,","program","to:"],"02-algorithms/00-sorting.html":["(the","1.","1].","2","2.","215.","3.","a:","algorithm","array","array?","binari","check","child","code","comment","complet","complex","count","df","duplic","each","element","equal","find","handl","heap","input","iter","key","kth","largest","lc315,","lc327","lc493","lc912","left","logic","logic)","lot","make","merg","naturally,","node,","nums[low...mid].","nums[low...pivot","nums[mid+1...high].","nums[pivot+1...high].","o(1)","o(logn)","o(n)","o(n*lgn)","o(n*logn)","parts.","pattern","pivot","pivot.","place","point","possibl","postord","preorder","problem","qick","quick","rang","recurs","right","s:","select","similar","sink","solut","sort","sort.","space","stabl","stable.","stable?","sum","swim","t:","think","time","travers","tree","tree.","usage.","veri","workflow","ye"],"02-algorithms/28-backtrack.html":["1","1.","2","2.","216","3","3.","39","40","46","465","47","494.","77","78","90","`duplicate`","`non","action/two","backtrack","backtrack/","choos","classic","code","combin","comment","contain","debt","dp","duplicate`","element","elements,","exampl","framework/","generally,","https://labuladong.online/algo/dynam","https://labuladong.online/algo/essenti","https://labuladong.online/algo/practic","key","list","mayb","memo","multipl","on","one/","other","parenthes","pattern","permut","permutation,","point","possibl","problem","problems.","programming/target","prune","queen","refer","set","solut","subset","sudo","sum","sum/","target","technique/backtrack","technique/permut","think","time.","times.","tree","type","types.","us","variant","view"],"02-algorithms/32-dynamic_programming.html":["&&","(int","(recurr",")","*","+","...","//","0","0;","0，因为没有物品或者背包没有空间的时候，能装的最大价值就是0。","1","1,","1,i","1.","10,","11","1143.","1;","1]","1][w","1][w],","1][w]，继承之前的结果。","1]]","1]]。","1]和wt[i","1]的限制下，在前i","1]表示第i个物品的价值和重量。","1、确定「状态」，也就是原问题和子问题中会变化的变量。由于硬币数量无限，硬币的面额也是题目给定的，只有目标金额会不断地向","1个物品中挑选，求最大价值，即dp[i","2","2,","2,…,0]","2.","2、确定「选择」，也就是导致「状态」产生变化的行为。目标金额为什么变化呢，因为你在选择硬币，你每选择一枚硬币，就相当于减少了目标金额。所以说所有硬币的面值，就是你的「选择」。","3.","300.","3、明确","416.","494.","5","516.","518.","53.","583.","6","673.","6，其含义为：对于给定的一系列物品中，若只对前3个物品进行选择，当背包容量为5时，最多可以装下的价值为6。","712.","72.","9,",":=","=","==>","[1..n]:","[1..w]:","[]int)","[i","`the","a.","actual","amount","amount。","arr[0...i]?","array","array.length;","array[i..j]","ascii","b","b.","backtrack","base","bit","c.","cach","calcul","case","case.","case的描述","chang","choic","choice?","classic","code","coin","comment","common","complet","complex","compress","connect","d","d.","defin","definit","delet","differ","distanc","down","down)/dp数组(down","dp","dp[..][0]","dp[0][..]","dp[1...n][0]","dp[i","dp[i]","dp[i],","dp[i][j]","dp[i][j]。","dp[i][w]","dp[i][w]的定义如下：对于前i个物品，当前背包的容量为w，这种情况下可以装的最大价值是dp[i][w]。","dp[j])+1),","dp[n+1][w+1]","dp[n][w]","dp[n][w]。base","dp[状态1][状态2][...]","dpcount?","dynam","edit","end","equal","equat","exampl","example,","example.","examples:","fibonacci","finally,","formul","framework","framework?","func","function","function.","greedi","https://labuladong.github.io/algo/images/%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e8%af%a6%e8%a7%a3%e8%bf%9b%e9%98%b6/coin.png","https://labuladong.github.io/algo/images/%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e8%af%a6%e8%a7%a3%e8%bf%9b%e9%98%b6/fib.png","https://labuladong.online/algo/dynam","ii","increas","int","int[]","int[][]","int[n];","j","key","knapsack","knapsack(wt,","lc","lc300.","lc322","len(arr)","len(wt)+1)","length","li","longest","make([][]int,","make([]int,","max(","max(dp[i],","maximum","mean","memor","middl","min","minimum","n","n)","new","num","number","nums[i]","nums[j]","n，返回凑出目标金额","o(n)","ok。这也是套路，经常刷题的读者应该能体会。","oper","optimization:","overlap","palindrom","partit","pattern","point","possibl","prefix","problem","problem.","problem:","problem?","problems,","problems.","problems:","program","programming/maximum","programming/target","rang","record","recursion)","refer","relat","result","return","s1[0...i]","s2[0...j]","same","sequenc","setup/upd","slide","solut","solution:","space","state","statu","string","strings.","sub","subarray","subarray/","subsequ","subset","such","sum","sum/","tabl","table.","tabulation.","target","templat","think","top","top)的定义。","transit","two","types,","us","usual","val","val[i","w","window","wt[i","{","}","一个一维的","不把物品","与之前没有区别，dp","个物品装入了背包，那么","个物品装入背包，那么很显然，最大价值","中，我们要求的子序列的长度为","假设你有面值为","先说状态，如何才能描述一个问题局面？只要给几个物品和一个背包的容量限制，就形成了一个背包问题呀。所以状态有两个，就是「背包的容量」和「可选择的物品」。","再说选择，也很容易想到啊，对于每件物品，你能选择什么？选择就是「装进背包」或者「不装进背包」。","函数(top","函数体现在函数参数，而","函数类似，也是把「状态」，也就是目标金额作为变量。不过","函数，一般来说函数的参数就是状态转移中会变化的量，也就是上面说到的「状态」；函数的返回值就是题目要求我们计算的量。就本题来说，状态只有一个，即「目标金额」，题目要求我们计算凑出目标金额所需的最少硬币数量。","函数：dp(n)","初始化","前后项之前关联+base","动态规划不就是从最简单的","只涉及一个字符串/数组的场景，dp","和","回到凑零钱问题，为什么说它符合最优子结构呢？","在","在子数组arr1[0..i]和子数组arr2[0..j]中，我们要求的子序列长度为dp[i][j]","在子数组arr[0..i]中，以arr[i]结尾的子序列的(最值)长度是dp[i]","在这个思路中","如果把这第","如果没有把这第","如果选择将第i个物品装进背包，那么第i个物品的价值val[i","子数组","就是","已初始化","应该等于","当然，我们也可以自底向上使用","往后推导吗，可以想象成一个链式反应，以小博大。但只有符合最优子结构的问题，才有发生这种链式反应的性质。","我们这里讲的是自顶向下的解法，所以会有一个递归的","所以我们可以这样定义","所需的最少硬币数量。","找最优子结构的过程，其实就是证明状态转移方程正确性的过程，方程符合最优子结构就可以写暴力解了，写出暴力解就可以看出有没有重叠子问题了，有则优化，无则","把物品","择优(选择1，选择2...)","数组","数组体现在数组索引：","数组的定义和刚才","数组的定义如下：","数组的定义是：","数组的定义：当目标金额为","数组：","时的最少硬币数（原问题），如果你知道凑出","时，至少需要","明白了状态和选择，动态规划问题基本上就解决了，对于自底向上的思考方式，代码的一般框架是这样：","最优子结构","最大子数组和","最长递增子序列","来消除重叠子问题，关于「状态」「选择」和","枚硬币凑出。","根据这个定义，我们想求的最终答案就是","比如说，如果dp[3][5]","涉及两个字符串/数组的场景，dp","状态1","状态1的所有取值：","状态2","状态2的所有取值：","状态转移方程","的最少硬币数（子问题），你只需要把子问题的答案加一（再选一枚面值为","的硬币），求个最小值，就是原问题的答案。因为硬币的数量是没有限制的，所以子问题之间没有相互制，是互相独立的。","的硬币，你想求","第二种思路模板是一个二维的","肯定就到手了，接下来你就要在剩余容量w","表示，输入一个目标金额","装进背包","装进背包,","这个问题是动态规划问题，因为它具有「最优子结构」的.要符合「最优子结构」，子问题间必须互相独立。","那么，既然知道了这是个动态规划问题，就要思考如何列出正确的状态转移方程？","都是这个思路。","靠近，所以唯一的「状态」就是目标金额","首先看看刚才找到的「状态」，有两个，也就是说我们需要一个二维dp数组。","首先，由于数组索引从0开始，而我们定义中的i是从1开始计数的，所以val[i"],"02-algorithms/101-parenthese_problems.html":["'('","')'","')',","+","1","1249.","1541.","2","20.","22.","32.","921.","a.","action/gener","add","and,","b.","backtrack","balanc","check","code","code.","comment","dynam","empti","end,","exampl","framework/","gener","https://labuladong.online/algo/essenti","https://labuladong.online/algo/frequ","https://labuladong.online/algo/practic","insert","interview/bracket","key","kp","lead","longest","mainli","make","mean","minimum","more","non","number","open","pair.","parenthes","parentheses/","parentheses?","pattern","point","possibl","problem","program","question","refer","relev","remov","resolv","same,","solut","specific,","stack","stack.","string","string.","summary/","technique/backtrack","think","todo:","type","usual","util","valid","valid."],"02-algorithms/200-math_problems.html":["%","&","(a","(b","*","0,","1)","1,","1.","2","2)","2.","372.","50.","=","==","=>","a*b","array.","bit","calcul","calculation.","case","code","comment","complexity?","edg","iter","k","k)","key","large,","math","math.minint32","mod","mod.","n","n)","n).","n/2),","o(lgn)","o(n)","oper","overflow","perform","point","possibl","pow","pow(x,","power","power(power(x,","power(x,","power,","problem","quick","recurs","reduc","refer","relat","solut","super","time","util","veri","x"]},"length":13},"tokenStore":{"root":{"0":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037}},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}},"，":{"docs":{},"把":{"docs":{},"索":{"docs":{},"引":{"docs":{},"左":{"docs":{},"闭":{"docs":{},"右":{"docs":{},"开":{"docs":{},"区":{"docs":{},"间":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"没":{"docs":{},"有":{"docs":{},"物":{"docs":{},"品":{"docs":{},"或":{"docs":{},"者":{"docs":{},"背":{"docs":{},"包":{"docs":{},"没":{"docs":{},"有":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"能":{"docs":{},"装":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{},"就":{"docs":{},"是":{"0":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"1":{"0":{"1":{"0":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"1":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"3":{"8":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"6":{"2":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"1":{"4":{"3":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}},"docs":{}},"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"2":{"4":{"9":{"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"docs":{}},"5":{"7":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{},".":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"3":{"8":{"2":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"4":{"2":{"3":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"docs":{}},"5":{"3":{"0":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"4":{"1":{"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"docs":{}},"9":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}}},"docs":{}},"6":{"5":{"0":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"7":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.02247191011235955},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.009104704097116844},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.029411764705882353}},".":{"1":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"2":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.01669195751138088},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}},"、":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"得":{"docs":{},"到":{"docs":{},"答":{"docs":{},"案":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"原":{"docs":{},"问":{"docs":{},"题":{"docs":{},"和":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"中":{"docs":{},"会":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"数":{"docs":{},"量":{"docs":{},"无":{"docs":{},"限":{"docs":{},"，":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"的":{"docs":{},"面":{"docs":{},"额":{"docs":{},"也":{"docs":{},"是":{"docs":{},"题":{"docs":{},"目":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"有":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"会":{"docs":{},"不":{"docs":{},"断":{"docs":{},"地":{"docs":{},"向":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"[":{"docs":{},"w":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}},"]":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"，":{"docs":{},"继":{"docs":{},"承":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"和":{"docs":{},"w":{"docs":{},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"下":{"docs":{},"，":{"docs":{},"在":{"docs":{},"前":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"的":{"docs":{},"价":{"docs":{},"值":{"docs":{},"和":{"docs":{},"重":{"docs":{},"量":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},";":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"中":{"docs":{},"挑":{"docs":{},"选":{"docs":{},"，":{"docs":{},"求":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{},"，":{"docs":{},"即":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}},")":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"2":{"0":{"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"1":{"4":{"docs":{},".":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"5":{"docs":{},".":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"6":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"docs":{}},"2":{"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"3":{"5":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"6":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"5":{"0":{"6":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"9":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"docs":{}},"6":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"7":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}}},"8":{"3":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"9":{"5":{"docs":{},".":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}},"docs":{}},"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.013657056145675266},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.013657056145675266},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"不":{"docs":{},"断":{"docs":{},"地":{"docs":{},"增":{"docs":{},"加":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}},"/":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"(":{"docs":{},"n":{"docs":{},"*":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"、":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"（":{"docs":{},"子":{"docs":{},"树":{"docs":{},"）":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"推":{"docs":{},"导":{"docs":{},"出":{"docs":{},"原":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"？":{"docs":{},"如":{"docs":{},"果":{"docs":{},"可":{"docs":{},"以":{"docs":{},"，":{"docs":{},"写":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"并":{"docs":{},"充":{"docs":{},"分":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"叫":{"docs":{},"「":{"docs":{},"分":{"docs":{},"解":{"docs":{},"问":{"docs":{},"题":{"docs":{},"」":{"docs":{},"的":{"docs":{},"思":{"docs":{},"维":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"确":{"docs":{},"定":{"docs":{},"「":{"docs":{},"选":{"docs":{},"择":{"docs":{},"」":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"导":{"docs":{},"致":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"产":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"变":{"docs":{},"化":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"你":{"docs":{},"在":{"docs":{},"选":{"docs":{},"择":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"，":{"docs":{},"你":{"docs":{},"每":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"枚":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"，":{"docs":{},"就":{"docs":{},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"说":{"docs":{},"所":{"docs":{},"有":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"的":{"docs":{},"面":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"你":{"docs":{},"的":{"docs":{},"「":{"docs":{},"选":{"docs":{},"择":{"docs":{},"」":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"…":{"docs":{},",":{"0":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}},")":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"3":{"0":{"0":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"3":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"4":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"1":{"4":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"5":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"2":{"7":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"4":{"4":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"7":{"2":{"docs":{},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"docs":{}},"9":{"5":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}}},"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}},"此":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"停":{"docs":{},"止":{"docs":{},"增":{"docs":{},"加":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}},"、":{"docs":{},"明":{"docs":{},"确":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"4":{"0":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"1":{"6":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}},"2":{"4":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"6":{"5":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"7":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"9":{"3":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"4":{"docs":{},".":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}},"docs":{},".":{"docs":{},"重":{"docs":{},"复":{"docs":{},"第":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"5":{"0":{"docs":{},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"1":{"6":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"8":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}},"3":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"8":{"3":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}},"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}}},"6":{"0":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"6":{"2":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"7":{"3":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"4":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"8":{"0":{"docs":{},".":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"，":{"docs":{},"其":{"docs":{},"含":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"物":{"docs":{},"品":{"docs":{},"中":{"docs":{},"，":{"docs":{},"若":{"docs":{},"只":{"docs":{},"对":{"docs":{},"前":{"3":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"进":{"docs":{},"行":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"当":{"docs":{},"背":{"docs":{},"包":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"5":{"docs":{},"时":{"docs":{},"，":{"docs":{},"最":{"docs":{},"多":{"docs":{},"可":{"docs":{},"以":{"docs":{},"装":{"docs":{},"下":{"docs":{},"的":{"docs":{},"价":{"docs":{},"值":{"docs":{},"为":{"6":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"7":{"0":{"4":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"1":{"2":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}},"2":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}},"6":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"7":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"8":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"docs":{}},"8":{"3":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"7":{"5":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"8":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{}},"9":{"0":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"2":{"1":{"docs":{},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"6":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"9":{"3":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{},"&":{"docs":{"./":{"ref":"./","tf":0.06060606060606061},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"&":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.06060606060606061},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":10.157894736842104},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}}}},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":10.010309278350515},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"?":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},".":{"docs":{},".":{"docs":{},"j":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"?":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"docs":{}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}},"m":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"d":{"docs":{},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"d":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535}}}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"d":{"docs":{},",":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"g":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}}},":":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"s":{"docs":{},"c":{"docs":{},"i":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"*":{"docs":{},"b":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"b":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":10.01685393258427},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}},"/":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}},"s":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.009104704097116844}}}}},"f":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.013254786450662739},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.044585987261146494},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544}}}}}},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"m":{"docs":{},"a":{"docs":{},"s":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913}}}}}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913}}}}}},"t":{"docs":{},"h":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"s":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.005891016200294551}},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.014331210191082803}}}},"e":{"docs":{},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.055964653902798235},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.056790123456790124},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.030254777070063694},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.06179775280898876},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.021244309559939303},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.03676470588235294},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.011146496815286623},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"x":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"?":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.03932584269662921}}}}}},"n":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.011146496815286623}}}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"p":{"docs":{},"i":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"i":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}}},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"r":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"s":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"*":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},":":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"的":{"docs":{},"描":{"docs":{},"述":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"c":{"docs":{},"h":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.008836524300441826},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.012345679012345678},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"n":{"docs":{},"g":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.022727272727272728}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"s":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}}}},"i":{"docs":{},"c":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"e":{"docs":{},"?":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.15789473684210525},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"s":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.018209408194233688}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.06060606060606061},"01-data_structures/readme.html":{"ref":"01-data_structures/readme.html","tf":5}}}},"y":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"f":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}},"s":{"2":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":5.003034901365706},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}},"i":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.012345679012345678},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"e":{"docs":{},"?":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"s":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.01914580265095729},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0345679012345679}}}}},"w":{"docs":{},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},")":{"docs":{},"/":{"docs":{},"d":{"docs":{},"p":{"docs":{},"数":{"docs":{},"组":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"b":{"docs":{},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.010622154779969651}},"i":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"p":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.07587253414264036}},"[":{"0":{"docs":{},"]":{"docs":{},"[":{"docs":{},".":{"docs":{},".":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}},"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}}}}}},"docs":{},".":{"docs":{},".":{"docs":{},"]":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"docs":{}}}}},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"w":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"对":{"docs":{},"于":{"docs":{},"前":{"docs":{},"i":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"，":{"docs":{},"当":{"docs":{},"前":{"docs":{},"背":{"docs":{},"包":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"为":{"docs":{},"w":{"docs":{},"，":{"docs":{},"这":{"docs":{},"种":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"可":{"docs":{},"以":{"docs":{},"装":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{},"是":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"w":{"docs":{},"]":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"docs":{}}}}},"n":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}}}},"docs":{}},"]":{"docs":{},"[":{"docs":{},"w":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"。":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}},"状":{"docs":{},"态":{"1":{"docs":{},"]":{"docs":{},"[":{"docs":{},"状":{"docs":{},"态":{"2":{"docs":{},"]":{"docs":{},"[":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"docs":{}}}}}},"docs":{}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"?":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"f":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.012345679012345678}},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"l":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"b":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"/":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}},"?":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"n":{"docs":{},"c":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}}}}}}},"o":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}},"o":{"docs":{},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":10.12},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.022727272727272728}},".":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"u":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"/":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"y":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"%":{"docs":{},"e":{"5":{"docs":{},"%":{"8":{"docs":{},"a":{"docs":{},"%":{"docs":{},"a":{"8":{"docs":{},"%":{"docs":{},"e":{"6":{"docs":{},"%":{"8":{"0":{"docs":{},"%":{"8":{"1":{"docs":{},"%":{"docs":{},"e":{"8":{"docs":{},"%":{"docs":{},"a":{"7":{"docs":{},"%":{"8":{"4":{"docs":{},"%":{"docs":{},"e":{"5":{"docs":{},"%":{"8":{"8":{"docs":{},"%":{"9":{"2":{"docs":{},"%":{"docs":{},"e":{"8":{"docs":{},"%":{"docs":{},"a":{"docs":{},"f":{"docs":{},"%":{"docs":{},"a":{"6":{"docs":{},"%":{"docs":{},"e":{"8":{"docs":{},"%":{"docs":{},"a":{"7":{"docs":{},"%":{"docs":{},"a":{"3":{"docs":{},"%":{"docs":{},"e":{"8":{"docs":{},"%":{"docs":{},"b":{"docs":{},"f":{"docs":{},"%":{"9":{"docs":{},"b":{"docs":{},"%":{"docs":{},"e":{"9":{"docs":{},"%":{"9":{"8":{"docs":{},"%":{"docs":{},"b":{"6":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"b":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"/":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"t":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}}}}}}}}},"o":{"docs":{},"/":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"[":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"[":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}},"s":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.008836524300441826},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}},"*":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446}}}}}},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},"e":{"docs":{},"a":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"i":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"m":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}}}},"t":{"docs":{},"'":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"e":{"docs":{},"r":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"+":{"1":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"docs":{}},"v":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}}}},"f":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.013254786450662739},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"都":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"一":{"docs":{},"轮":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"w":{"docs":{},"t":{"docs":{},")":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"docs":{}}}}}}},"a":{"docs":{},"f":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"d":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/100-list.html":{"ref":"01-data_structures/100-list.html","tf":10},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"n":{"docs":{},"k":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.03977272727272727}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},")":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.010622154779969651},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"o":{"docs":{},"p":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"w":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446}}}}}},"t":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"c":{"1":{"0":{"3":{"8":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"6":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"1":{"4":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"6":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"7":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"6":{"6":{"4":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"?":{"docs":{},"?":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"docs":{}},"7":{"6":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"docs":{}},"2":{"3":{"0":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"3":{"0":{"0":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"docs":{}},"1":{"5":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}},",":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"docs":{}},"2":{"2":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"7":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"docs":{}},"docs":{}},"4":{"5":{"0":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"9":{"3":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"5":{"3":{"8":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"6":{"5":{"2":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"4":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"7":{"0":{"0":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"1":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"8":{"8":{"9":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{}},"9":{"1":{"2":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"docs":{}},"8":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{}},"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.04807692307692308}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}}},"d":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.01910828025477707}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"n":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"i":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"u":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"f":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}},"s":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}}}}}}},"docs":{}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"+":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}}}}}}},"docs":{}}}}}}},"i":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"j":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"e":{"docs":{},"d":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}},"w":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}}}}}}},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"凑":{"docs":{},"出":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"/":{"2":{"docs":{},")":{"docs":{},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"docs":{}}},"p":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0662739322533137},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.04938271604938271},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.025477707006369428},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.06666666666666667},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.10526315789473684},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.022727272727272728},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.1404494382022472},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.028831562974203338},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":5.036764705882353},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":5.0673076923076925}},"s":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"/":{"docs":{},"s":{"docs":{},"k":{"docs":{},"i":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"?":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},",":{"docs":{"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":5.003034901365706},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"/":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.005891016200294551}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}}}},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"i":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":5.073529411764706}},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}},"?":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}}}},"t":{"3":{"docs":{},"/":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"docs":{},"s":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"i":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"s":{"docs":{},"s":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"t":{"docs":{},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"y":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.020618556701030927},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.020700636942675158},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.05333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.028089887640449437},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.011782032400589101},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}},"s":{"docs":{},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.019753086419753086}}}}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"s":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.016200294550810016},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.012345679012345678},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"e":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}}},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"w":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"e":{"docs":{},"r":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}}}}},"x":{"docs":{},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}}}}},",":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}},"v":{"1":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"docs":{}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}},"r":{"1":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}},"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},":":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.005891016200294551},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.030303030303030304}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.005891016200294551},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},":":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.008836524300441826},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"e":{"docs":{},"v":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.007961783439490446},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"y":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"g":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.011146496815286623},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}},")":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}},"?":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"中":{"docs":{},"的":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"不":{"docs":{},"再":{"docs":{},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"（":{"docs":{},"不":{"docs":{},"包":{"docs":{},"含":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}},"符":{"docs":{},"合":{"docs":{},"要":{"docs":{},"求":{"docs":{},"（":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543}}},"]":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"，":{"docs":{},"转":{"docs":{},"而":{"docs":{},"不":{"docs":{},"断":{"docs":{},"增":{"docs":{},"加":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"s":{"1":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"docs":{}}},"2":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"j":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"docs":{}}},"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.016200294550810016},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":10.130681818181818}},"*":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"/":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"d":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},".":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.014331210191082803},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"n":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.03676470588235294}},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"b":{"docs":{},"l":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}},"e":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"?":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544}}}}}},"t":{"docs":{},"e":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"u":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":10.007407407407408},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.022058823529411766}},"s":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.06060606060606061},"01-data_structures/readme.html":{"ref":"01-data_structures/readme.html","tf":5}},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"x":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}}}},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667}}}}}},"o":{"docs":{},"p":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},",":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{},"o":{"docs":{},"s":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.011782032400589101},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.01592356687898089}}}}}},"g":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913}}}}}}},"l":{"docs":{},"f":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.02247191011235955}},"u":{"docs":{},"p":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"/":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}}}}}}}},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"o":{"docs":{},"w":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.009876543209876543}}}},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544}}}}}}},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}},"n":{"docs":{},"k":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.024691358024691357},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"c":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"o":{"docs":{},"w":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.008836524300441826},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.014814814814814815}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"s":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}}}}}},"u":{"docs":{},"b":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.009104704097116844}}}},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},"t":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.008836524300441826},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"/":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.009104704097116844}},"/":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"y":{"docs":{},"/":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"e":{"docs":{},"r":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"d":{"docs":{},"o":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}},"c":{"docs":{},"h":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.007587253414264037}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"m":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.030303030303030304},"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.005891016200294551},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":10.054140127388536},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}},"*":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}},"s":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.014331210191082803},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}},"e":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},".":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},".":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},"s":{"docs":{},".":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},":":{"docs":{"02-algorithms/readme.html":{"ref":"02-algorithms/readme.html","tf":0.05263157894736842}}},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},")":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"d":{"docs":{},"o":{"docs":{},":":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}},"w":{"docs":{},"o":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.06179775280898876},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.04411764705882353}},"s":{"docs":{},".":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"i":{"docs":{},"c":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"s":{"docs":{},"k":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"b":{"docs":{},"l":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.028831562974203338}},"e":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"%":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.057692307692307696}}},"(":{"docs":{},"r":{"1":{"docs":{},")":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"i":{"docs":{},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"f":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"完":{"docs":{},"全":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},")":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"a":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}},"b":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"*":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.013254786450662739},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.012345679012345678},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.012139605462822459},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"+":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.019753086419753086},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}},"=":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"=":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.024279210925644917},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},"=":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}},">":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},">":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}}}},"[":{"1":{"docs":{},".":{"docs":{},".":{"docs":{},"n":{"docs":{},"]":{"docs":{},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"w":{"docs":{},"]":{"docs":{},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}},"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408}}}}}}},"]":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"c":{"docs":{},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}},"d":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.007363770250368188},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}},"i":{"docs":{},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}},"s":{"docs":{},",":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}},"e":{"docs":{},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}}},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"s":{"docs":{},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},",":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}},"t":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"n":{"docs":{},"d":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},",":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}}}},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},"e":{"docs":{},"y":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.023564064801178203},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.01728395061728395},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.02388535031847134},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.05333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.017045454545454544},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.028089887640449437},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.028846153846153848}}},"e":{"docs":{},"p":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}},"o":{"docs":{},"k":{"docs":{},"o":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}}},"m":{"docs":{},"p":{"docs":{},"?":{"docs":{"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}},"t":{"docs":{},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.012139605462822459}},"(":{"docs":{},"w":{"docs":{},"t":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}},"p":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.022058823529411766}}},")":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":5.009615384615385}},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}},"docs":{}},"docs":{}}}}}}}}}},"x":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"_":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"y":{"docs":{},"b":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}},"p":{"docs":{},":":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}},"k":{"docs":{},"e":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}},"(":{"docs":{},"[":{"docs":{},"]":{"docs":{},"[":{"docs":{},"]":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"l":{"docs":{},"i":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.010309278350515464},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.006369426751592357},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.045454545454545456}},"e":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753}}}}}}}}},"m":{"docs":{},"o":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}},"r":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}},"a":{"docs":{},"n":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}},"i":{"docs":{},"n":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"m":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.022058823529411766}}}}}}},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"r":{"docs":{},"e":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}},"d":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}},".":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"p":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}}},"n":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}},"(":{"1":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}},"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}},"n":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.01592356687898089},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.009554140127388535}}},".":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"*":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"2":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"docs":{}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"g":{"docs":{},"n":{"docs":{},")":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}},"n":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}},"e":{"docs":{},"/":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.014331210191082803},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667}},")":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}}}}}}}}},"k":{"docs":{},"。":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"套":{"docs":{},"路":{"docs":{},"，":{"docs":{},"经":{"docs":{},"常":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"的":{"docs":{},"读":{"docs":{},"者":{"docs":{},"应":{"docs":{},"该":{"docs":{},"能":{"docs":{},"体":{"docs":{},"会":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0029455081001472753},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"u":{"docs":{},"e":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}},"e":{"docs":{},"n":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.02666666666666667},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.045454545454545456},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}},"v":{"2":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}},"docs":{},"a":{"docs":{},"l":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"i":{"docs":{},"d":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.04411764705882353}},".":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588}}}}},"u":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"r":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"i":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}},"w":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.022091310751104567},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.037037037037037035},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"d":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}},"h":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}},"k":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},",":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.004418262150220913},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.007407407407407408},"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.011363636363636364}}}}}}}}},"t":{"docs":{},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.006069802731411229}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"节":{"docs":{},"点":{"docs":{},"等":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}},"物":{"docs":{},"品":{"docs":{},"装":{"docs":{},"入":{"docs":{},"了":{"docs":{},"背":{"docs":{},"包":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"背":{"docs":{},"包":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"价":{"docs":{},"值":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"中":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"，":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"了":{"docs":{},"）":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"增":{"docs":{},"加":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}},"）":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}},"到":{"docs":{},"达":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}},"和":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"第":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}},"在":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"处":{"docs":{},"理":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"链":{"docs":{},"表":{"docs":{},"相":{"docs":{},"关":{"docs":{},"问":{"docs":{},"题":{"docs":{},"时":{"docs":{},"，":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"是":{"docs":{},"经":{"docs":{},"常":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"，":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"主":{"docs":{},"要":{"docs":{},"分":{"docs":{},"为":{"docs":{},"两":{"docs":{},"类":{"docs":{},"：":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"真":{"docs":{},"正":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"但":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"把":{"docs":{},"索":{"docs":{},"引":{"docs":{},"当":{"docs":{},"做":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"施":{"docs":{},"展":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"，":{"docs":{},"本":{"docs":{},"文":{"docs":{},"主":{"docs":{},"要":{"docs":{},"讲":{"docs":{},"数":{"docs":{},"组":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"1":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"和":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"2":{"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"j":{"docs":{},"]":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"求":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{},"[":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"i":{"docs":{},"]":{"docs":{},"中":{"docs":{},"，":{"docs":{},"以":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"结":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"(":{"docs":{},"最":{"docs":{},"值":{"docs":{},")":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"这":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"中":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"对":{"docs":{},"于":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"大":{"docs":{},"部":{"docs":{},"分":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"六":{"docs":{},"大":{"docs":{},"解":{"docs":{},"题":{"docs":{},"套":{"docs":{},"路":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"配":{"docs":{},"合":{"docs":{},"完":{"docs":{},"成":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}},"所":{"docs":{},"谓":{"docs":{},"左":{"docs":{},"右":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"相":{"docs":{},"向":{"docs":{},"而":{"docs":{},"行":{"docs":{},"或":{"docs":{},"者":{"docs":{},"相":{"docs":{},"背":{"docs":{},"而":{"docs":{},"行":{"docs":{},"；":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"这":{"docs":{},"样":{"docs":{},"定":{"docs":{},"义":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"需":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}},"找":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"的":{"docs":{},"难":{"docs":{},"点":{"docs":{},"在":{"docs":{},"于":{"docs":{},"，":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"的":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"奇":{"docs":{},"数":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"偶":{"docs":{},"数":{"docs":{},"，":{"docs":{},"解":{"docs":{},"决":{"docs":{},"该":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"是":{"docs":{},"从":{"docs":{},"中":{"docs":{},"心":{"docs":{},"向":{"docs":{},"两":{"docs":{},"端":{"docs":{},"扩":{"docs":{},"散":{"docs":{},"的":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},"技":{"docs":{},"巧":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0049382716049382715}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"证":{"docs":{},"明":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"正":{"docs":{},"确":{"docs":{},"性":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"方":{"docs":{},"程":{"docs":{},"符":{"docs":{},"合":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"了":{"docs":{},"，":{"docs":{},"写":{"docs":{},"出":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"出":{"docs":{},"有":{"docs":{},"没":{"docs":{},"有":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"了":{"docs":{},"，":{"docs":{},"有":{"docs":{},"则":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"无":{"docs":{},"则":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"针":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"窗":{"docs":{},"口":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"缩":{"docs":{},"小":{"docs":{},"窗":{"docs":{},"口":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}},"步":{"docs":{},"在":{"docs":{},"优":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"「":{"docs":{},"可":{"docs":{},"行":{"docs":{},"解":{"docs":{},"」":{"docs":{},"，":{"docs":{},"最":{"docs":{},"终":{"docs":{},"找":{"docs":{},"到":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},".":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}},"相":{"docs":{},"当":{"docs":{},"于":{"docs":{},"在":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"一":{"docs":{},"个":{"docs":{},"「":{"docs":{},"可":{"docs":{},"行":{"docs":{},"解":{"docs":{},"」":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"第":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}},"的":{"docs":{},"尽":{"docs":{},"头":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}},"最":{"docs":{},"少":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"数":{"docs":{},"（":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"）":{"docs":{},"，":{"docs":{},"你":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"把":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"加":{"docs":{},"一":{"docs":{},"（":{"docs":{},"再":{"docs":{},"选":{"docs":{},"一":{"docs":{},"枚":{"docs":{},"面":{"docs":{},"值":{"docs":{},"为":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"硬":{"docs":{},"币":{"docs":{},"）":{"docs":{},"，":{"docs":{},"求":{"docs":{},"个":{"docs":{},"最":{"docs":{},"小":{"docs":{},"值":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"原":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"是":{"docs":{},"没":{"docs":{},"有":{"docs":{},"限":{"docs":{},"制":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"之":{"docs":{},"间":{"docs":{},"没":{"docs":{},"有":{"docs":{},"相":{"docs":{},"互":{"docs":{},"制":{"docs":{},"，":{"docs":{},"是":{"docs":{},"互":{"docs":{},"相":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"你":{"docs":{},"想":{"docs":{},"求":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"称":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"「":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"」":{"docs":{},"。":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}},"第":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}},"二":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"模":{"docs":{},"板":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"的":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}},"而":{"docs":{},"所":{"docs":{},"谓":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"同":{"docs":{},"向":{"docs":{},"而":{"docs":{},"行":{"docs":{},"，":{"docs":{},"一":{"docs":{},"快":{"docs":{},"一":{"docs":{},"慢":{"docs":{},"。":{"docs":{},"(":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"是":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"型":{"docs":{},")":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"都":{"docs":{},"涵":{"docs":{},"盖":{"docs":{},"了":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"链":{"docs":{},"表":{"docs":{},"环":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"01-data_structures/000-array.html":{"ref":"01-data_structures/000-array.html","tf":0.0014727540500736377},"01-data_structures/050-string.html":{"ref":"01-data_structures/050-string.html","tf":0.0024691358024691358}}}}}}}}}}}}}}}}},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"思":{"docs":{},"路":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},">":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785}}}}}},"p":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.013333333333333334}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}},"s":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0031847133757961785},"01-data_structures/400-heap.html":{"ref":"01-data_structures/400-heap.html","tf":0.04},"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.016853932584269662},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893},"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.004777070063694267},"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.007352941176470588},"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.019230769230769232}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"解":{"docs":{},"题":{"docs":{},"的":{"docs":{},"思":{"docs":{},"维":{"docs":{},"模":{"docs":{},"式":{"docs":{},"分":{"docs":{},"两":{"docs":{},"类":{"docs":{},"：":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"配":{"docs":{},"合":{"docs":{},"外":{"docs":{},"部":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"，":{"docs":{},"这":{"docs":{},"叫":{"docs":{},"「":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"」":{"docs":{},"的":{"docs":{},"思":{"docs":{},"维":{"docs":{},"模":{"docs":{},"式":{"docs":{},"。":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"体":{"docs":{},"现":{"docs":{},"在":{"docs":{},"函":{"docs":{},"数":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"把":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"作":{"docs":{},"为":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"不":{"docs":{},"过":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"来":{"docs":{},"说":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"就":{"docs":{},"是":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"中":{"docs":{},"会":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"量":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"上":{"docs":{},"面":{"docs":{},"说":{"docs":{},"到":{"docs":{},"的":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"；":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"就":{"docs":{},"是":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"我":{"docs":{},"们":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"量":{"docs":{},"。":{"docs":{},"就":{"docs":{},"本":{"docs":{},"题":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"即":{"docs":{},"「":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"」":{"docs":{},"，":{"docs":{},"题":{"docs":{},"目":{"docs":{},"要":{"docs":{},"求":{"docs":{},"我":{"docs":{},"们":{"docs":{},"计":{"docs":{},"算":{"docs":{},"凑":{"docs":{},"出":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"所":{"docs":{},"需":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"数":{"docs":{},"量":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"d":{"docs":{},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"单":{"docs":{},"独":{"docs":{},"抽":{"docs":{},"出":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"它":{"docs":{},"需":{"docs":{},"要":{"docs":{},"做":{"docs":{},"什":{"docs":{},"么":{"docs":{},"事":{"docs":{},"情":{"docs":{},"？":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"什":{"docs":{},"么":{"docs":{},"时":{"docs":{},"候":{"docs":{},"（":{"docs":{},"前":{"docs":{},"/":{"docs":{},"中":{"docs":{},"/":{"docs":{},"后":{"docs":{},"序":{"docs":{},"位":{"docs":{},"置":{"docs":{},"）":{"docs":{},"做":{"docs":{},"？":{"docs":{},"其":{"docs":{},"他":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"不":{"docs":{},"用":{"docs":{},"你":{"docs":{},"操":{"docs":{},"心":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"函":{"docs":{},"数":{"docs":{},"会":{"docs":{},"帮":{"docs":{},"你":{"docs":{},"在":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"上":{"docs":{},"执":{"docs":{},"行":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"这":{"docs":{},"第":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"没":{"docs":{},"有":{"docs":{},"把":{"docs":{},"这":{"docs":{},"第":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"选":{"docs":{},"择":{"docs":{},"将":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"装":{"docs":{},"进":{"docs":{},"背":{"docs":{},"包":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"的":{"docs":{},"价":{"docs":{},"值":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"论":{"docs":{},"使":{"docs":{},"用":{"docs":{},"哪":{"docs":{},"种":{"docs":{},"思":{"docs":{},"维":{"docs":{},"模":{"docs":{},"式":{"docs":{},"，":{"docs":{},"你":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"思":{"docs":{},"考":{"docs":{},"：":{"docs":{"01-data_structures/200-tree.html":{"ref":"01-data_structures/200-tree.html","tf":0.0015923566878980893}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"e":{"docs":{"02-algorithms/00-sorting.html":{"ref":"02-algorithms/00-sorting.html","tf":0.005681818181818182}}}},"`":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.0056179775280898875}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"02-algorithms/28-backtrack.html":{"ref":"02-algorithms/28-backtrack.html","tf":0.011235955056179775}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"/":{"docs":{},"/":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}},":":{"docs":{},"=":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.009104704097116844}}}},"j":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}},"{":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}},"}":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}},"一":{"docs":{},"个":{"docs":{},"一":{"docs":{},"维":{"docs":{},"的":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"不":{"docs":{},"把":{"docs":{},"物":{"docs":{},"品":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"与":{"docs":{},"之":{"docs":{},"前":{"docs":{},"没":{"docs":{},"有":{"docs":{},"区":{"docs":{},"别":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"你":{"docs":{},"有":{"docs":{},"面":{"docs":{},"值":{"docs":{},"为":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"先":{"docs":{},"说":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"才":{"docs":{},"能":{"docs":{},"描":{"docs":{},"述":{"docs":{},"一":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"局":{"docs":{},"面":{"docs":{},"？":{"docs":{},"只":{"docs":{},"要":{"docs":{},"给":{"docs":{},"几":{"docs":{},"个":{"docs":{},"物":{"docs":{},"品":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"背":{"docs":{},"包":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"就":{"docs":{},"形":{"docs":{},"成":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"背":{"docs":{},"包":{"docs":{},"问":{"docs":{},"题":{"docs":{},"呀":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"状":{"docs":{},"态":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"「":{"docs":{},"背":{"docs":{},"包":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"」":{"docs":{},"和":{"docs":{},"「":{"docs":{},"可":{"docs":{},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"物":{"docs":{},"品":{"docs":{},"」":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"再":{"docs":{},"说":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"也":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"想":{"docs":{},"到":{"docs":{},"啊":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"件":{"docs":{},"物":{"docs":{},"品":{"docs":{},"，":{"docs":{},"你":{"docs":{},"能":{"docs":{},"选":{"docs":{},"择":{"docs":{},"什":{"docs":{},"么":{"docs":{},"？":{"docs":{},"选":{"docs":{},"择":{"docs":{},"就":{"docs":{},"是":{"docs":{},"「":{"docs":{},"装":{"docs":{},"进":{"docs":{},"背":{"docs":{},"包":{"docs":{},"」":{"docs":{},"或":{"docs":{},"者":{"docs":{},"「":{"docs":{},"不":{"docs":{},"装":{"docs":{},"进":{"docs":{},"背":{"docs":{},"包":{"docs":{},"」":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"前":{"docs":{},"后":{"docs":{},"项":{"docs":{},"之":{"docs":{},"前":{"docs":{},"关":{"docs":{},"联":{"docs":{},"+":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"不":{"docs":{},"就":{"docs":{},"是":{"docs":{},"从":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}},"只":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"/":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"到":{"docs":{},"凑":{"docs":{},"零":{"docs":{},"钱":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"说":{"docs":{},"它":{"docs":{},"符":{"docs":{},"合":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"呢":{"docs":{},"？":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"就":{"docs":{},"是":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"已":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}},"应":{"docs":{},"该":{"docs":{},"等":{"docs":{},"于":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"使":{"docs":{},"用":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}},"往":{"docs":{},"后":{"docs":{},"推":{"docs":{},"导":{"docs":{},"吗":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"想":{"docs":{},"象":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"式":{"docs":{},"反":{"docs":{},"应":{"docs":{},"，":{"docs":{},"以":{"docs":{},"小":{"docs":{},"博":{"docs":{},"大":{"docs":{},"。":{"docs":{},"但":{"docs":{},"只":{"docs":{},"有":{"docs":{},"符":{"docs":{},"合":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"才":{"docs":{},"有":{"docs":{},"发":{"docs":{},"生":{"docs":{},"这":{"docs":{},"种":{"docs":{},"链":{"docs":{},"式":{"docs":{},"反":{"docs":{},"应":{"docs":{},"的":{"docs":{},"性":{"docs":{},"质":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"这":{"docs":{},"里":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"是":{"docs":{},"自":{"docs":{},"顶":{"docs":{},"向":{"docs":{},"下":{"docs":{},"的":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"会":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"物":{"docs":{},"品":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"择":{"docs":{},"优":{"docs":{},"(":{"docs":{},"选":{"docs":{},"择":{"1":{"docs":{},"，":{"docs":{},"选":{"docs":{},"择":{"2":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},")":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"docs":{}}}}},"docs":{}}}}}},"数":{"docs":{},"组":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"体":{"docs":{},"现":{"docs":{},"在":{"docs":{},"数":{"docs":{},"组":{"docs":{},"索":{"docs":{},"引":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"和":{"docs":{},"刚":{"docs":{},"才":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"是":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"：":{"docs":{},"当":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{},"为":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}},"时":{"docs":{},"的":{"docs":{},"最":{"docs":{},"少":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"数":{"docs":{},"（":{"docs":{},"原":{"docs":{},"问":{"docs":{},"题":{"docs":{},"）":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"知":{"docs":{},"道":{"docs":{},"凑":{"docs":{},"出":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"至":{"docs":{},"少":{"docs":{},"需":{"docs":{},"要":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"明":{"docs":{},"白":{"docs":{},"了":{"docs":{},"状":{"docs":{},"态":{"docs":{},"和":{"docs":{},"选":{"docs":{},"择":{"docs":{},"，":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"基":{"docs":{},"本":{"docs":{},"上":{"docs":{},"就":{"docs":{},"解":{"docs":{},"决":{"docs":{},"了":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"自":{"docs":{},"底":{"docs":{},"向":{"docs":{},"上":{"docs":{},"的":{"docs":{},"思":{"docs":{},"考":{"docs":{},"方":{"docs":{},"式":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"一":{"docs":{},"般":{"docs":{},"框":{"docs":{},"架":{"docs":{},"是":{"docs":{},"这":{"docs":{},"样":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.004552352048558422}}}}}},"大":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"长":{"docs":{},"递":{"docs":{},"增":{"docs":{},"子":{"docs":{},"序":{"docs":{},"列":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"来":{"docs":{},"消":{"docs":{},"除":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"关":{"docs":{},"于":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"「":{"docs":{},"选":{"docs":{},"择":{"docs":{},"」":{"docs":{},"和":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}},"枚":{"docs":{},"硬":{"docs":{},"币":{"docs":{},"凑":{"docs":{},"出":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}},"根":{"docs":{},"据":{"docs":{},"这":{"docs":{},"个":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"求":{"docs":{},"的":{"docs":{},"最":{"docs":{},"终":{"docs":{},"答":{"docs":{},"案":{"docs":{},"就":{"docs":{},"是":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"如":{"docs":{},"说":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"3":{"docs":{},"]":{"docs":{},"[":{"5":{"docs":{},"]":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}},"docs":{}}}},"docs":{}}}}}}}}}},"涉":{"docs":{},"及":{"docs":{},"两":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"/":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"场":{"docs":{},"景":{"docs":{},"，":{"docs":{},"d":{"docs":{},"p":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"1":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"取":{"docs":{},"值":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"2":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"取":{"docs":{},"值":{"docs":{},"：":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}},"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0030349013657056147}}}}}}}},"肯":{"docs":{},"定":{"docs":{},"就":{"docs":{},"到":{"docs":{},"手":{"docs":{},"了":{"docs":{},"，":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"你":{"docs":{},"就":{"docs":{},"要":{"docs":{},"在":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"容":{"docs":{},"量":{"docs":{},"w":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}},"装":{"docs":{},"进":{"docs":{},"背":{"docs":{},"包":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}},",":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"具":{"docs":{},"有":{"docs":{},"「":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"」":{"docs":{},"的":{"docs":{},".":{"docs":{},"要":{"docs":{},"符":{"docs":{},"合":{"docs":{},"「":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"」":{"docs":{},"，":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"间":{"docs":{},"必":{"docs":{},"须":{"docs":{},"互":{"docs":{},"相":{"docs":{},"独":{"docs":{},"立":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"，":{"docs":{},"既":{"docs":{},"然":{"docs":{},"知":{"docs":{},"道":{"docs":{},"了":{"docs":{},"这":{"docs":{},"是":{"docs":{},"个":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"思":{"docs":{},"考":{"docs":{},"如":{"docs":{},"何":{"docs":{},"列":{"docs":{},"出":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"？":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"靠":{"docs":{},"近":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"就":{"docs":{},"是":{"docs":{},"目":{"docs":{},"标":{"docs":{},"金":{"docs":{},"额":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"看":{"docs":{},"看":{"docs":{},"刚":{"docs":{},"才":{"docs":{},"找":{"docs":{},"到":{"docs":{},"的":{"docs":{},"「":{"docs":{},"状":{"docs":{},"态":{"docs":{},"」":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"维":{"docs":{},"d":{"docs":{},"p":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"数":{"docs":{},"组":{"docs":{},"索":{"docs":{},"引":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"中":{"docs":{},"的":{"docs":{},"i":{"docs":{},"是":{"docs":{},"从":{"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},"计":{"docs":{},"数":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"[":{"docs":{},"i":{"docs":{"02-algorithms/32-dynamic_programming.html":{"ref":"02-algorithms/32-dynamic_programming.html","tf":0.0015174506828528073}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"'":{"docs":{},"(":{"docs":{},"'":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.022058823529411766}}}},")":{"docs":{},"'":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}},",":{"docs":{"02-algorithms/101-parenthese_problems.html":{"ref":"02-algorithms/101-parenthese_problems.html","tf":0.014705882352941176}}}}}},"x":{"docs":{"02-algorithms/200-math_problems.html":{"ref":"02-algorithms/200-math_problems.html","tf":0.009615384615384616}}}},"length":1450},"corpusTokens":["%","&","&&","'('","')'","')',","(a","(b","(if","(in","(int","(r1)","(recurr","(same","(the","(完全二叉树)",")","*","*util","+","+=","...","//","0","0,","0;","0，因为没有物品或者背包没有空间的时候，能装的最大价值就是0。","0，把索引左闭右开区间","1","1)","1,","1,i","1.","1.1","1.2","1.我们在字符串","10,","1010.","1011.","1038)","105.","1062.","108.","11","1143.","1249.","125.","1257.","1382.","1423.","1530.","1541.","159.","1650","1650.","167.","1;","1]","1].","1][w","1][w],","1][w]，继承之前的结果。","1]]","1]]。","1]和wt[i","1]的限制下，在前i","1]表示第i个物品的价值和重量。","1、是否可以通过遍历一遍二叉树得到答案？如果可以，用一个","1、确定「状态」，也就是原问题和子问题中会变化的变量。由于硬币数量无限，硬币的面额也是题目给定的，只有目标金额会不断地向","1个物品中挑选，求最大价值，即dp[i","2","2(n*logn)","2)","2,","2,…,0]","2.","2.我们先不断地增加","2/","20.","214.","215.","216","22.","235.","236","236.","2506.","259","26.","27.","283.","295.","2d","2h","2、是否可以定义一个递归函数，通过子问题（子树）的答案推导出原问题的答案？如果可以，写出这个递归函数的定义，并充分利用这个函数的返回值，这叫「分解问题」的思维模式。","2、确定「选择」，也就是导致「状态」产生变化的行为。目标金额为什么变化呢，因为你在选择硬币，你每选择一枚硬币，就相当于减少了目标金额。所以说所有硬币的面值，就是你的「选择」。","3","3.","3.此时，我们停止增加","30","300.","303.","304.","314.","315.","32.","327.","34.","344.","372.","39","395.","3、明确","4.重复第","40","416.","424.","46","465","47","493.","494.","5","5.","50.","516.","518.","53.","583.","6","60","60.","662.","673.","674.","680.","6，其含义为：对于给定的一系列物品中，若只对前3个物品进行选择，当背包容量为5时，最多可以装下的价值为6。","704.","712.","72.","76","76.","77","78","83.","875.","88.","9,","90","921.","95.","96.","993.",":=","=","==","==>","=>",">","[1..n]:","[1..w]:","[]int)","[i","[left,","`duplicate`","`non","`the","a*b","a.","a:","abstract","accord","action/","action/gener","action/merg","action/two","actual","add","advanc","again)","algorithm","alogorithms,","also.","amount","amount。","ancestor","and,","anoth","approach","approach.","arr[0...i]?","array","array.","array.length;","array?","array[i..j]","ascii","attent","b","b.","backtrack","backtrack/","balanc","banana","base","between","bf","binari","bit","bit:","bitmask","border","both","bound","boundari","break","bs","bst","bt","built","c.","cach","calcul","calculation.","capac","card","case","case*","case.","case:","case的描述","central","chang","charact","check","child","child.","children","children,","children.","choic","choice?","choos","classic","clearli","closur","code","code.","coin","column","combin","comment","common","compar","complet","complex","complexity:","complexity?","compress","connect","conquer","construct","contain","continu","control","convert","copi","count","cousin","current","cursive.","d","d.","data","day","debt","defin","definit","delet","df","dfs,","dfs.","dfs2.","dft","diamet","differ","distanc","distance?","distinct","divid","divis","doesn't","doubl","down","down)/dp数组(down","dp","dp[..][0]","dp[0][..]","dp[1...n][0]","dp[i","dp[i]","dp[i],","dp[i][j]","dp[i][j]。","dp[i][w]","dp[i][w]的定义如下：对于前i个物品，当前背包的容量为w，这种情况下可以装的最大价值是dp[i][w]。","dp[j])+1),","dp[n+1][w+1]","dp[n][w]","dp[n][w]。base","dp[状态1][状态2][...]","dpcount?","duplic","duplicate`","durat","dynam","each","eat","edg","edit","effect","element","elements,","empti","end","end,","equal","equat","exampl","example,","example.","examples:","except","extend","extend,","far","fast","faster","fibonacci","fill","finally,","find","first","flat","flatten","follow","formul","found","framework","framework.","framework/","framework?","full","func","function","function.","gener","generally,","go","good","graph","greater","greedi","h.","handl","hard","head","heap","heap.","height","high","https://github.com/brofu/leetcod","https://labuladong.github.io/algo/images/%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e8%af%a6%e8%a7%a3%e8%bf%9b%e9%98%b6/coin.png","https://labuladong.github.io/algo/images/%e5%8a%a8%e6%80%81%e8%a7%84%e5%88%92%e8%af%a6%e8%a7%a3%e8%bf%9b%e9%98%b6/fib.png","https://labuladong.online/algo/data","https://labuladong.online/algo/dynam","https://labuladong.online/algo/essenti","https://labuladong.online/algo/frequ","https://labuladong.online/algo/practic","i+1","id","idea","ii","ii.","iii","immut","includ","inclus","increas","index","index*","inord","input","insert","insert/delet","int","int[]","int[][]","int[n];","interview/binari","interview/bracket","into/from","introduct","it'","it.","iter","iv","j","k","k)","keep","key","kmp?","knapsack","knapsack(wt,","koko","kp","kth","large,","largest","last","last,","lc","lc1038.","lc106.","lc114.","lc116.","lc117.","lc1664.","lc1664??","lc1676.","lc230.","lc300.","lc315","lc315,","lc315.","lc322","lc327","lc450.","lc493","lc493.","lc538.","lc652.","lc654.","lc700.","lc701.","lc889.","lc912","lc98.","lead","leaf","leetcod","left","left,","left，我们都要更新一轮结果。","len(arr)","len(wt)+1)","length","level","level,","li","limit","link","link.","list","list:","logic","logic)","logic.","longest","loop","lot","low","lowest","mainli","make","make([][]int,","make([]int,","map:","math","math.minint32","max","max(","max(dp[i],","max_depth_of_right_subtree)","maximum","mayb","mean","median","memo","memor","merg","merge.","mergesort","middl","min","minimum","mod","mod.","more","move","multipl","n","n)","n).","n/2),","naturally,","need","new","next","nil","node","node,","non","none","normal","note","nsum","num","number","numbersumofsubtre","nums[i]","nums[j]","nums[low...mid].","nums[low...pivot","nums[mid+1...high].","nums[pivot+1...high].","n，返回凑出目标金额","o(1)","o(cons).","o(lgn)","o(logn)","o(n)","o(n),","o(n).","o(n*lgn)","o(n*logn)","o(nlogn)2","obtain","ok。这也是套路，经常刷题的读者应该能体会。","on","one/","open","oper","optimization:","order","order)","order,","ordered,","other","overflow","overlap","packag","pad","pair","pair.","palindrom","paramet","parent","parenthes","parentheses/","parentheses?","part3/","partit","parts.","pass","path","pattern","pay","perfect","perform","permut","permutation,","pivot","pivot.","place","point","point.","pointer","pointers,","points.","popul","posit","possibl","possible.","post","postord","pow","pow(x,","power","power(power(x,","power(x,","power,","practic","pre","prefix","preorder","present","presum","principl","problem","problem,","problem.","problem:","problem?","problems,","problems.","problems/skil","problems:","program","programming/maximum","programming/target","prune","public","pv1","pv1.","qick","queen","queri","question","queue","quick","r1.","rang","record","recurs","recursion)","recursively.","reduc","refer","reference:","region","relat","relev","remov","repeat","replac","repo:","resolv","result","return","revers","review","right","right)","right)?","right)，直到窗口中的字符串不再符合要求（不包含","right)，直到窗口中的字符串符合要求（包含了","right,","right]","right],","right，转而不断增加","root","s","s1[0...i]","s2[0...j]","s:","same","same,","scenarios.","search","segment","select","self","sentinel.","sequenc","seril","set","setup","setup/upd","ship","shortest","show","shrunk","shrunk,","side","signatur","similar","sink","situat","situations:","slice","slide","slow","smaller","smallest","solut","solution.","solution:","song","sort","sort*","sort.","sort/","sort:","sort://labuladong.online/algo/data","sort?","space","space:","specific,","stabl","stable.","stable?","stack","stack.","standard","state","statu","stop","stream","string","string.","strings.","structur","structure/bst","structure/prefix","sub","subarray","subarray/","subsequ","subset","substr","subtre","such","sudo","sum","sum(max_depth_of_left_subtree,","sum/","summari","summary/","super","support","swim","t","t:","tabl","table.","tabulation.","target","task","technique/array","technique/backtrack","technique/binari","technique/permut","technique/slid","templat","then,","think","time","time.","time:","times.","to:","todo:","top","top)的定义。","total","track","transit","travers","traverse.","traverse...","tree","tree*","tree,","tree.","trees.","two","type","types,","types.","typic","uniqu","up","updat","us","usage.","usual","util","v2","val","val[i","valid","valid.","valu","var","variant","veri","version","vertic","view","w","widt","width","wikipedia,","window","within","without","work","workflow","wt[i","x","ye","zero","{","}","一个一维的","不把物品","与之前没有区别，dp","个物品装入了背包，那么","个物品装入背包，那么很显然，最大价值","个链表节点等问题，它们都是通过一个","中使用双指针中的左右指针技巧，初始化","中的所有字符了）。同时，每次增加","中的所有字符）。","中，我们要求的子序列的长度为","二叉树解题的思维模式分两类：","假设你有面值为","先说状态，如何才能描述一个问题局面？只要给几个物品和一个背包的容量限制，就形成了一个背包问题呀。所以状态有两个，就是「背包的容量」和「可选择的物品」。","再说选择，也很容易想到啊，对于每件物品，你能选择什么？选择就是「装进背包」或者「不装进背包」。","函数(top","函数体现在函数参数，而","函数类似，也是把「状态」，也就是目标金额作为变量。不过","函数配合外部变量来实现，这叫「遍历」的思维模式。","函数，一般来说函数的参数就是状态转移中会变化的量，也就是上面说到的「状态」；函数的返回值就是题目要求我们计算的量。就本题来说，状态只有一个，即「目标金额」，题目要求我们计算凑出目标金额所需的最少硬币数量。","函数：dp(n)","初始化","到达字符串","前后项之前关联+base","动态规划不就是从最简单的","只涉及一个字符串/数组的场景，dp","和","和第","回到凑零钱问题，为什么说它符合最优子结构呢？","在","在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：左右指针和快慢指针。","在子数组arr1[0..i]和子数组arr2[0..j]中，我们要求的子序列长度为dp[i][j]","在子数组arr[0..i]中，以arr[i]结尾的子序列的(最值)长度是dp[i]","在数组中并没有真正意义上的指针，但我们可以把索引当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的双指针算法。","在这个思路中","如果单独抽出一个二叉树节点，它需要做什么事情？需要在什么时候（前/中/后序位置）做？其他的节点不用你操心，递归函数会帮你在所有节点上执行相同的操作。","如果把这第","如果没有把这第","如果选择将第i个物品装进背包，那么第i个物品的价值val[i","子数组","对于单链表来说，大部分技巧都属于快慢指针，单链表的六大解题套路","就是","已初始化","应该等于","当然，我们也可以自底向上使用","往后推导吗，可以想象成一个链式反应，以小博大。但只有符合最优子结构的问题，才有发生这种链式反应的性质。","快指针和一个","慢指针配合完成任务。","我们这里讲的是自顶向下的解法，所以会有一个递归的","所以我们可以这样定义","所谓左右指针，就是两个指针相向而行或者相背而行；","所需的最少硬币数量。","找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧","找最优子结构的过程，其实就是证明状态转移方程正确性的过程，方程符合最优子结构就可以写暴力解了，写出暴力解就可以看出有没有重叠子问题了，有则优化，无则","把物品","择优(选择1，选择2...)","指针扩大窗口","指针缩小窗口","数组","数组体现在数组索引：","数组的定义和刚才","数组的定义如下：","数组的定义是：","数组的定义：当目标金额为","数组：","无论使用哪种思维模式，你都需要思考：","时的最少硬币数（原问题），如果你知道凑出","时，至少需要","明白了状态和选择，动态规划问题基本上就解决了，对于自底向上的思考方式，代码的一般框架是这样：","最优子结构","最大子数组和","最长递增子序列","来消除重叠子问题，关于「状态」「选择」和","枚硬币凑出。","根据这个定义，我们想求的最终答案就是","步在优化这个「可行解」，最终找到最优解.","步相当于在寻找一个「可行解」，然后第","步，直到","比如说，如果dp[3][5]","涉及两个字符串/数组的场景，dp","状态1","状态1的所有取值：","状态2","状态2的所有取值：","状态转移方程","的尽头。","的最少硬币数（子问题），你只需要把子问题的答案加一（再选一枚面值为","的硬币），求个最小值，就是原问题的答案。因为硬币的数量是没有限制的，所以子问题之间没有相互制，是互相独立的。","的硬币，你想求","称为一个「窗口」。","第","第二种思路模板是一个二维的","而所谓快慢指针，就是两个指针同向而行，一快一慢。(滑动窗口是快慢指针的一个类型)","肯定就到手了，接下来你就要在剩余容量w","表示，输入一个目标金额","装进背包","装进背包,","这个问题是动态规划问题，因为它具有「最优子结构」的.要符合「最优子结构」，子问题间必须互相独立。","那么，既然知道了这是个动态规划问题，就要思考如何列出正确的状态转移方程？","都是这个思路。","都涵盖了，比如链表环判断，倒数第","靠近，所以唯一的「状态」就是目标金额","首先看看刚才找到的「状态」，有两个，也就是说我们需要一个二维dp数组。","首先，由于数组索引从0开始，而我们定义中的i是从1开始计数的，所以val[i"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"Algorithm Notes\nReview & practice the common Data Structures and Alogorithms, with leetcode problems.\nThe code can be found in repo: https://github.com/brofu/leetcode\nData Structures\n\nArray & String\nList\nTree\nGraph\nHeap\nStack\n\nAlgorithms\n\nSorting\nBFS\nDFS\nBacktrack\nDynamic Programming\nGreedy\n\n"},"01-data_structures/readme.html":{"url":"01-data_structures/readme.html","title":"Data Structures","keywords":"","body":""},"01-data_structures/000-array.html":{"url":"01-data_structures/000-array.html","title":"Array","keywords":"","body":"Array\nKey Points\nAn Example\nProblems\nCommon problems/skills related to array \n\nDouble Pointers\nSlow and Faster\nLeft and Right\nBinary Search\nSliding Window\n\n\nPrefix Sum\nN-Sum \nMerge Sort related\nBitMask related\nMath related\n\nProblems - Double Pointers\nKey Principle\n\n在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：左右指针和快慢指针。\n所谓左右指针，就是两个指针相向而行或者相背而行；\n而所谓快慢指针，就是两个指针同向而行，一快一慢。(滑动窗口是快慢指针的一个类型)\n对于单链表来说，大部分技巧都属于快慢指针，单链表的六大解题套路 都涵盖了，比如链表环判断，倒数第 K 个链表节点等问题，它们都是通过一个 fast 快指针和一个 slow 慢指针配合完成任务。\n在数组中并没有真正意义上的指针，但我们可以把索引当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的双指针算法。\n\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n26. Remove Duplicates from Sorted Array\nDouble Pointers, slow + fast\n\ncode\n\n\n\n83. Remove Duplicates from Sorted List\nDouble Pointers, slow + fast\nEdged case of head == nil\ncode\n\n\n\n27. Remove Element\nDouble Pointers, slow + fast\n\ncode\n\n\n\n283. Move Zeroes\nDouble Pointers, slow + fast\n* Similar as Problem 27. Just remove the 0, and pad the index from k with 0\ncode\nSimilar to the logic of pivot logic in quick sort\n\n\n167. Two Sum II - Input Array Is Sorted\nDouble Pointers, left + right, from both sides to central\n\ncode\n\n\n\n344. Reverse String\nDouble Pointers, left + right, from both sides to central\n\ncode\n\n\n\n5. Longest Palindromic Substring\nDouble Pointers, left + right, from central to both sides\n* 找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧\ncode\n\n\n\n88. Merge Sorted Array\nDouble Pointers\n* Pointers move from high to low index\ncode\n\n\n\n\n\n\n\n-\n\n\n\nReference\n\nhttps://labuladong.online/algo/essential-technique/array-two-pointers-summary-2/\n\nProblems - Double Pointers - Binary Search Problems\nKey Points\n\nThe border of [left, right], or [left, right)?\n\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n704. Binary Search\nBS\n* The border of [left, right]\ncode\n\n\n\n34. Find First and Last Position of Element in Sorted Array\nBS\n The border of [left, right] Control the left most or right most index* The edged case\ncode\n\n\n\n875. Koko Eating Bananas\nBS\n* How to abstract the problem to Binary Search\ncode\n\n\n\n1011. Capacity To Ship Packages Within D Days\nBS\n* How to abstract the problem to Binary Search\ncode\n\n\n\nReference\n\nhttps://labuladong.online/algo/essential-technique/binary-search-framework-2/\nhttps://labuladong.online/algo/frequency-interview/binary-search-in-action/\n\nProblems - Double Pointers - Sliding Window Problems\nKey Principle\n\n1.我们在字符串 S 中使用双指针中的左右指针技巧，初始化 left = right = 0，把索引左闭右开区间 [left, right) 称为一个「窗口」。\n2.我们先不断地增加 right 指针扩大窗口 [left, right)，直到窗口中的字符串符合要求（包含了 T 中的所有字符）。\n3.此时，我们停止增加 right，转而不断增加 left 指针缩小窗口 [left, right)，直到窗口中的字符串不再符合要求（不包含 T 中的所有字符了）。同时，每次增加 left，我们都要更新一轮结果。\n4.重复第 2 和第 3 步，直到 right 到达字符串 S 的尽头。\n第 2 步相当于在寻找一个「可行解」，然后第 3 步在优化这个「可行解」，最终找到最优解.\n\nNotes\n\nThe logic of extend window and shrunk window maybe different from problem to problem. For example, it's different for problem 76 and 159. \nThe workflow maybe different from problem to problem also. For example, problem 395. \n\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n76. Minimum Window Substring\nSliding Window\noperate the supporting vars at the same time\ncode\n\n\n\n159. Longest Substring with At Most Two Distinct Characters\nSliding Window\nThe extend and shrunk window logic is different from problem 76\ncode\n\n\n\n3. Longest Substring Without Repeating Characters\nSliding Window\nVersion v2 and PV1. PV1 shows the standard workflow of Sliding Window clearly\ncode\n\n\n\n395. Longest Substring with At Least K Repeating Characters\nSliding Window\nthe workflow is different from the framework. Extend, shrunk, and the check if we have a valid result\ncode\n\n\n\n1423. Maximum Points You Can Obtain from Cards\nSliding Window\n* Hard point is to convert the problem to sliding window scenarios.\ncode\n\n\n\n424. Longest Repeating Character Replacement\nSliding Window\n*Utilize the index of character in the string\ncode\n\n\n\nReference\n\nhttps://labuladong.online/algo/essential-technique/sliding-window-framework-2/\n\nProblems - N-Sum Problems\n\n\n\nTypes\nProblems\nKey Points\nPossible Solutions\nComments\n\n\n\n\nnSum Problems\n259\n Double pointer  Remove the duplication\ncode\n\n\n\nProblems - LIS Problems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n674. Longest Continuous Increasing Subsequence\n\nEdged case: the array ALL is increasing\ncode\n\n\n\nProblems - MergeSort Related Problems\nKey Principles\nBreak down the problems into sub problems and the merge. Divide and Conquer \n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n315. Count of Smaller Numbers After Self\n Merge Sort Binary Indexed Tree * Segment Tree\nPrinciple why merge sort can work (R1)\ncode\n\n\n\n493. Reverse Pairs\n Merge Sort Binary Indexed Tree* Segment Tree\nHow to insert the logic into MergeSort\ncode\n\n\n\n327. Count of Range Sum\n Merge Sort Binary Indexed Tree* Segment Tree\n Convert the problem to presum problem  merge sort* Refer to the code\ncode\n\n\n\nReference:\nR1. https://labuladong.online/algo/practice-in-action/merge-sort/\nProblems - PreSum Problems\nKey Principles\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n303. Range Sum Query - Immutable\nPresum\n* If the left num is included\ncode\n\n\n\n304. Range Sum Query 2D - Immutable\nPresum\n if left is included  the set calculation\ncode\n\n\n\nReference:\nR1. https://labuladong.online/algo/practice-in-action/merge-sort://labuladong.online/algo/data-structure/prefix-sum/ \nProblems - BitMask Problems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n2506. Count Pairs Of Similar Strings\nbitmask\nshould contain SAME characters\ncode\n\n\n\nProblems - Math Related Problems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n1010. Pairs of Songs With Total Durations Divisible by 60\n\nget the idea of % 60. Edged case of length = 0 or 30\ncode\n\n\n\nProblems - Others\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n1062. Longest Repeating Substring\n\n 1.1 The idea of loop logic.  1.2 Stop loop in advance and edged case* 2 The idea of binary search with possible length\ncode\n\n\n\n"},"01-data_structures/050-string.html":{"url":"01-data_structures/050-string.html","title":"String","keywords":"","body":"String\nKey Points\nAn Example\nProblems\n\nDouble Pointers\nSlow and Faster\nLeft and Right\nBinary Search\nSliding Window\nPalindromic Problem\n\n\n\nProblems - Double Pointers\nKey Principle\n\n在处理数组和链表相关问题时，双指针技巧是经常用到的，双指针技巧主要分为两类：左右指针和快慢指针。\n所谓左右指针，就是两个指针相向而行或者相背而行；\n而所谓快慢指针，就是两个指针同向而行，一快一慢。(滑动窗口是快慢指针的一个类型)\n对于单链表来说，大部分技巧都属于快慢指针，单链表的六大解题套路 都涵盖了，比如链表环判断，倒数第 K 个链表节点等问题，它们都是通过一个 fast 快指针和一个 slow 慢指针配合完成任务。\n在数组中并没有真正意义上的指针，但我们可以把索引当做数组中的指针，这样也可以在数组中施展双指针技巧，本文主要讲数组相关的双指针算法。\n\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n26. Remove Duplicates from Sorted Array\nDouble Pointers, slow + fast\n\ncode\n\n\n\n83. Remove Duplicates from Sorted List\nDouble Pointers, slow + fast\nEdged case of head == nil\ncode\n\n\n\n27. Remove Element\nDouble Pointers, slow + fast\n\ncode\n\n\n\n283. Move Zeroes\nDouble Pointers, slow + fast\n* Similar as Problem 27. Just remove the 0, and pad the index from k with 0\ncode\n\n\n\n167. Two Sum II - Input Array Is Sorted\nDouble Pointers, left + right, from both sides to central\n\ncode\n\n\n\n344. Reverse String\nDouble Pointers, left + right, from both sides to central\n\ncode\n\n\n\n5. Longest Palindromic Substring\nDouble Pointers, left + right, from central to both sides\n* 找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧\ncode\n\n\n\nReference\n\nhttps://labuladong.online/algo/essential-technique/array-two-pointers-summary-2/\n\nProblems - Palindromic Problem\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n125. Valid Palindrome\nDouble Pointers\n\ncode\n\n\n\n680. Valid Palindrome II\nDouble Pointers\n* Recursively\ncode\n\n\n\n5. Longest Palindromic Substring\nDouble Pointers, left + right, from central to both sides\n* 找回文串的难点在于，回文串的的长度可能是奇数也可能是偶数，解决该问题的核心是从中心向两端扩散的双指针技巧\ncode\n\n\n\n214. Shortest Palindrome\n Double Pointers   KMP?\nRefer to the code for the Double Pointers approach\ncode\n\n\n\n\n\n\n\n-\n\n\n\nProblems - Sliding Window\nKey Principle\n\n1.我们在字符串 S 中使用双指针中的左右指针技巧，初始化 left = right = 0，把索引左闭右开区间 [left, right) 称为一个「窗口」。\n2.我们先不断地增加 right 指针扩大窗口 [left, right)，直到窗口中的字符串符合要求（包含了 T 中的所有字符）。\n3.此时，我们停止增加 right，转而不断增加 left 指针缩小窗口 [left, right)，直到窗口中的字符串不再符合要求（不包含 T 中的所有字符了）。同时，每次增加 left，我们都要更新一轮结果。\n4.重复第 2 和第 3 步，直到 right 到达字符串 S 的尽头。\n第 2 步相当于在寻找一个「可行解」，然后第 3 步在优化这个「可行解」，最终找到最优解.\n\nNotes\n\nThe logic of extend window and shrunk window maybe different from problem to problem. For example, it's different for problem 76 and 159. \nThe workflow maybe different from problem to problem also. For example, problem 395. \n\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n76. Minimum Window Substring\nSliding Window\noperate the supporting vars at the same time\ncode\n\n\n\n159. Longest Substring with At Most Two Distinct Characters\nSliding Window\nThe extend and shrunk window logic is different from problem 76\ncode\n\n\n\n3. Longest Substring Without Repeating Characters\nSliding Window\nVersion v2 and PV1. PV1 shows the standard workflow of Sliding Window clearly\ncode\n\n\n\n395. Longest Substring with At Least K Repeating Characters\nSliding Window\nthe workflow is different from the framework. Extend, shrunk, and the check if we have a valid result\ncode\n\n\n\n1423. Maximum Points You Can Obtain from Cards\nSliding Window\n* Hard point is to convert the problem to sliding window scenarios.\ncode\n\n\n\n424. Longest Repeating Character Replacement\nSliding Window\n*Utilize the index of character in the string\ncode\n\n\n\nReference\n\nhttps://labuladong.online/algo/essential-technique/sliding-window-framework-2/\n\nProblems - Others\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n1062. Longest Repeating Substring\n\n 1.1 The idea of loop logic.  1.2 Stop loop in advance and edged case* 2 The idea of binary search with possible length\ncode\n\n\n\n"},"01-data_structures/100-list.html":{"url":"01-data_structures/100-list.html","title":"List","keywords":"","body":""},"01-data_structures/200-tree.html":{"url":"01-data_structures/200-tree.html","title":"Tree","keywords":"","body":"Tree\nKey Points\nPrinciples\n\nThe diameter is the largest value of sum(max_depth_of_left_subtree, max_depth_of_right_subtree) of all of nodes of the tree\n\nTraverse\n\nBF\nUsually based on Queue\nCan also use recursive\n\n\nDF\nPreOrder\nInOrder\nPostOrder\n\n\n\nThinking Patterns\n\nTree Traverse. Traverse \nRecursive with sub trees. Sub Tasks\n\n\n二叉树解题的思维模式分两类：\n1、是否可以通过遍历一遍二叉树得到答案？如果可以，用一个 traverse 函数配合外部变量来实现，这叫「遍历」的思维模式。\n2、是否可以定义一个递归函数，通过子问题（子树）的答案推导出原问题的答案？如果可以，写出这个递归函数的定义，并充分利用这个函数的返回值，这叫「分解问题」的思维模式。\n无论使用哪种思维模式，你都需要思考：\n如果单独抽出一个二叉树节点，它需要做什么事情？需要在什么时候（前/中/后序位置）做？其他的节点不用你操心，递归函数会帮你在所有节点上执行相同的操作。\n\nAn Example\nProblems\nProblems - Ancestor Problems\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n236. Lowest Common Ancestor of a Binary Tree\n1. post-order DFS2. Track the path from root to target node and compare the slice\n1. Only 2 situations: one left, on right and one is parent of another  2. The loop order of the track slice\ncode\n\n\n\n235. Lowest Common Ancestor of a Binary Search Tree\nSame solutions as 236\n1. Utilize the character of BST\ncode\n\n\n\n1650. Lowest Common Ancestor of a Binary Tree III\nLinked list\n1. Check the public node 2 linked list\ncode\n\n\n\n1257. Smallest Common Region\nSame solutions as 1650\n\ncode\n\n\n\n\n\n\n\n-\n\n\n\nProblems - BST Problems\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n108. Convert Sorted Array to Binary Search Tree\n\n\ncode\n\n\n\n1382. Balance a Binary Search Tree\nin-order traverse + convert ordered array to BST\n\ncode\n\n\n\n314. Binary Tree Vertical Order Traversal\n\n\ncode\n\n\n\nBST Problems - Construction\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n96. Unique Binary Search Trees\nDFS post-order\nHow to set memo effectively\ncode\n\n\n\n95. Unique Binary Search Trees II\nDFS post-order\nEdged case of low > high and low == high\ncode\n\n\n\nReference\n\nhttps://labuladong.online/algo/data-structure/bst-part3/\n\n\nLC116. Populating Next Right Pointers in Each Node\nWhy the normal traverse approach doesn't work with this problem? O(N), O(1)\nUtil BFS traverse. O(N), O(N)\nLC117. Populating Next Right Pointers in Each Node II\nBFS approach. O(N), O(N)\nBFS approach with cursive. O(N), O(N)\nMultiple pointers approach & sentinel. O(N), O(Cons). And the approach also work with LC116.\n\n\n\n\nLC114. Flatten Binary Tree to Linked List\nTraverse the tree, construct the link.\nFlat recursively\n\n\n\nConstruction\nOther Problems\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n1530. Number of Good Leaf Nodes Pairs\nDFS\n Count the pairs of left sub-tree, right sub-tree and current node   How to calculate the distance? Utilized height\ncode\n\n\n\n993. Cousins in Binary Tree\nDFS, BFS\n\ncode\n\n\n\nBT Problems\nBT Problems - Construction\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n105. Construct Binary Tree from Preorder and Inorder Traversal\npreorder inorder\nBoundary of array\ncode\n\n\n\nBT Problems - Widt & Column Related\n\n\n\nProblems\nSolutions\nKey Points\ncode\nComments\n\n\n\n\n662. Maximum Width of Binary Tree\nBFS\nEdged case\ncode\n\n\n\nBinary Tree\n\nLC106. Construct binary tree from preorder and inorder array\nRecursively.\nKey points\nBound of array\n\n\n\n\nLC654. Maximum Binary Tree\nRecursively\n\n\nLC889. Construct binary tree from preorder and postorder array  \nRecursively\nKey Points\n2 situations\nCommon solution.\n\n\n\n\nLC652. Find Duplicate Subtrees\nDFS. Post order\nKey Points\nGenerate a signature for each sub tree\nSerilize the tree or\ngenerate an id for it. Pay attention to the id of nil node\n\n\nTime: O(n). O(n), O(1)\nSpace: O(n)\n\n\n\n\nLC315. Count of Smaller Numbers After Self\nMerge Sort\nBIT\nComplexity:\nT:\nCopy middle list: O(N)\nMerge Sort: O(N*LogN) \nSetup Index Map: O(N)\nQuery and Update BIT: O(NLogN)2\n\n\nSpace\nMiddle list: O(N)\nIndex Map: O(N)\nBIT: O(N)\n\n\n\n\n\n\nLC493. Reverse Pairs\n\nSimilar as LC315.\nReverse BIT\n\n\nSolution 2. Only with Merge Sort\nKey Points\nCount first and then sort\ncount += middle-i+1\nComplexity\nT: \nCompare and Sort: 2(N*logN)\n\n\nS:\nO(N)\n\n\n\n\n\n\nWhy LC315 can not resolved with only Merge Sort?\n\n\n\n\nLC1664. Lowest Common Ancestor of a Binary Tree II.\n\nKey Points.\nKeep the idea of pre-order, in-order, post-order traverse...\n\n\n\n\nLC1676. Lowest Common Ancestor of a Binary Tree IV\nKey Point.\nDifference from LC1664??\n\n\n\n\n\nComplete Binary Tree\n\nPrinciple\n\nAccording to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\n\nFor any node, if it has children, then, there must be at least 1 Perfect Binary Tree in it's children. \n\n\n\nPerfect Binary Tree\n\nPrinciple\nEvery level of the tree is full\n\n\n\nFull Binary Tree\n\nPrinciple\nEvery node has either has both of the 2 children or none of the 2 children.\n\n\n\nBinary Search Tree\n\nKey Points\nUse closure to reduce the complexity of passing parameters\n*\n\n\nLC230. Kth Smallest Element in a BST\n\nInorder traverse\nFollow Up\nExtend the BST with NumberSumOfSubtree\nThe operation of Insert/Delete elements into/from BST\n\n\n\n\nLC538. LC1038. Convert BST to Greater Tree (same as 1038)\n\nDFT and right sub tree first (in order)\n\n\n\n\nLC98. Validate Binary Search Tree\nKey Points\nNot only the left and right child. But also all the left and right subtree\n\n\n\n\nLC700. Search in a Binary Search Tree.\nLC701. Insert into a Binary Search Tree.\nLC450. Delete Node in a BST\n\nBinary Indexed Tree\n\n"},"01-data_structures/400-heap.html":{"url":"01-data_structures/400-heap.html","title":"Heap","keywords":"","body":"heap\nKey Points\nThinking Patterns\nAn Example\nProblems\nProblems - Binary Heap Problem\nKey Points\n\nUse array to present the Binary Heap. (完全二叉树)\n\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n215. Kth Largest Element in an Array\n1. Heap  2. Quick Sort  3. Quick Select\n\nheap\n-\n\n\n\n295. Get the median of an ordered stream\n\nKey Point\n\nKeep a max heap and min heap \nMay use the go built-in heap package\n\nThe up and down operation is a typical swim and sink operation of a heap\n\n\n\n\nPrinciple\n\nUsing the heap sort. (if the stream is ordered, no need to order again)\n\n\n\n"},"02-algorithms/readme.html":{"url":"02-algorithms/readme.html","title":"Algorithms","keywords":"","body":"Algorithms\nNotes about the classic algorithms and problem, including but not limited to:\nClassic Algorithms\n\nBFS\nDFS\nBacktrack\nDynamic Programming\n\nClassic Problems\n\nParentheses Problems\n\n"},"02-algorithms/00-sorting.html":{"url":"02-algorithms/00-sorting.html","title":"Sorting","keywords":"","body":"Sorting\n\nQuick Sort\nQuick Select\n\n\nMerge Sort\n\nKey Points\n\n\n\nSorting Algorithm\nTime Complexity\nSpace Complexity\nStable?\nComments\n\n\n\n\nQuick Sort\nO(N*lgN)\nO(1)\nNo\n1. Why not stable? A: Check the logic of finding pivot  2. What if there is lots of duplicate elements in the input array?\n\n\nMerge Sort\nO(N*lgN)\nO(N)\nYes\n1. Why is stable?\n\n\n\nThinking Patterns\nQuick Sort\n\nNaturally,  workflow of Qick Sort is very similar to the Preorder DFS traverse of a binary tree.\nOn each node, find the pivot. (The preorder logic)\nSort nums[low...pivot-1]. The left child logic\nSort nums[pivot+1...high]. The right child logic\n\n\n\nMerge Sort\n\nNaturally,  workflow of Merge Sort is very similar to the Postorder DFS traverse of a binary tree.\nSort nums[low...mid]. The left child logic\nSort nums[mid+1...high]. The right child logic\nMerge 2 parts.  The postorder logic\n\n\n\nProblems\nProblems - Quick Sort\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n215. Kth Largest Element in an Array\n1. Heap  2. Quick Sort or Merge Sort  3. Quick Select\n\nheap  Quick Sort\n-\n\n\n\nHeap Sort\n\nComplexity\nT: O(N*logN)\nS: \nO(logN) Recursive\nO(1) iterative\n\n\n\n\nKey Points\nIn-place sorting\nnot stable. May make stable\n\n\nAbout Heap\nA complete Binary Tree\nswim and sink are equal\n\n\n\nProblems\n\nLC912 sort an array\n\nMerge Sort. Space O(N)\n\n\nLC327 Count of Range Sum\n\nMerge Sort usage.\nhandle logic and then sort\n\n\nSimilar as LC315, LC493\n\n\n\n"},"02-algorithms/28-backtrack.html":{"url":"02-algorithms/28-backtrack.html","title":"Backtrack","keywords":"","body":"Backtrack\nKey Points\nThinking Patterns\nAn Example\nProblems\nProblems - Permutation, Combination and Set Problems\nGenerally, there are 3 types of classic problems for Permutation, Combination and Set problems. There maybe some other variants from these 3 types.\n1. Choose from a list which contains `Non-Duplicate` elements, and element can ONLY be used for ONE time.\n2. Choose from a list which contains `Duplicate` elements, and element can ONLY be used for ONE times.\n3. Choose from a list which contains `Non-Duplicate` elements, and element can be used for MULTIPLE times.\nThinking Patterns\nAnd the key points of these problems is the backtrack tree\nProblems\n\n\n\nTypes\nProblems\nKey Points\nPossible Solutions\nComments\n\n\n\n\nPermutation Problems\n46\n\ncode\ntype 1\n\n\nPermutation Problems\n47\n\ncode\ntype 2\n\n\nCombination Problems\n77\n\ncode\ntype 1\n\n\nCombination Problems\n216\n\ncode\ntype 1\n\n\nCombination Problems\n40\n\ncode\ntype 2\n\n\nCombination Problems\n39\n\ncode\ntype 3\n\n\nSet Problems\n78\n\ncode\ntype 1\n\n\nSet Problems\n90\n\ncode\ntype 2\n\n\nQueen Problems\n\n\n\n\n\n\nSudo Problems\n\n\n\n\n\n\nParentheses Problems\n\n\n\n\n\n\nProblems - Variants Problems\n\n\n\nTypes\nProblems\nKey Points\nPossible Solutions\nComments\n\n\n\n\nDebt Problem\n465\n\ncode\n\n\n\nReferences\n\nhttps://labuladong.online/algo/essential-technique/backtrack-framework/ \nhttps://labuladong.online/algo/essential-technique/permutation-combination-subset-all-in-one/\nhttps://labuladong.online/algo/practice-in-action/two-views-of-backtrack/\n\nProblems - Others\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n494. Target Sum\n1. Backtrack  2. DP\n1. Pruning with memo\ncode\n\n\n\nReferences\n\nhttps://labuladong.online/algo/dynamic-programming/target-sum/\n\n"},"02-algorithms/32-dynamic_programming.html":{"url":"02-algorithms/32-dynamic_programming.html","title":"Dynamic Programming","keywords":"","body":"Dynamic Programming\nKey Points\n\n最优子结构\n\nIf there is 最优子结构\n\n\n状态转移方程\n\n(Recurrence or Recursion) 前后项之前关联+base case的描述\nExamples:\nFibonacci Problems: https://labuladong.github.io/algo/images/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%AF%A6%E8%A7%A3%E8%BF%9B%E9%98%B6/fib.png\nCoins Change Problem: https://labuladong.github.io/algo/images/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%AF%A6%E8%A7%A3%E8%BF%9B%E9%98%B6/coin.png\n\n\n\n\nOverlapping sub problems. For example, Fibonacci Number\n\nSolution:  Cache the middle result\nOptimization: Space used by Cache\n\n\nMemorization or Tabulation. \n\nLC300. dp[i], the length of longest sub sequence ends with nums[i] in nums\n\n\nFormulation of State Transition Equation \nLC300. dp[i] = max(dp[i], dp[j])+1), where j = [i-1,i-2,…,0] && nums[j] \n\n\n\nThinking Patterns\n\n动态规划不就是从最简单的 base case 往后推导吗，可以想象成一个链式反应，以小博大。但只有符合最优子结构的问题，才有发生这种链式反应的性质。 找最优子结构的过程，其实就是证明状态转移方程正确性的过程，方程符合最优子结构就可以写暴力解了，写出暴力解就可以看出有没有重叠子问题了，有则优化，无则 OK。这也是套路，经常刷题的读者应该能体会。\n\nAn Example\nUse problem LC322 as an example. \n最优子结构\n\n这个问题是动态规划问题，因为它具有「最优子结构」的.要符合「最优子结构」，子问题间必须互相独立。\n回到凑零钱问题，为什么说它符合最优子结构呢？ 假设你有面值为 1, 2, 5 的硬币，你想求 amount = 11 时的最少硬币数（原问题），如果你知道凑出 amount = 10, 9, 6 的最少硬币数（子问题），你只需要把子问题的答案加一（再选一枚面值为 1, 2, 5 的硬币），求个最小值，就是原问题的答案。因为硬币的数量是没有限制的，所以子问题之间没有相互制，是互相独立的。\n\n状态转移方程\n\n那么，既然知道了这是个动态规划问题，就要思考如何列出正确的状态转移方程？\n1、确定「状态」，也就是原问题和子问题中会变化的变量。由于硬币数量无限，硬币的面额也是题目给定的，只有目标金额会不断地向 base case 靠近，所以唯一的「状态」就是目标金额 amount。\n2、确定「选择」，也就是导致「状态」产生变化的行为。目标金额为什么变化呢，因为你在选择硬币，你每选择一枚硬币，就相当于减少了目标金额。所以说所有硬币的面值，就是你的「选择」。\n3、明确 dp 函数(Top to Down)/dp数组(Down to Top)的定义。\nTop to Down \n我们这里讲的是自顶向下的解法，所以会有一个递归的 dp 函数，一般来说函数的参数就是状态转移中会变化的量，也就是上面说到的「状态」；函数的返回值就是题目要求我们计算的量。就本题来说，状态只有一个，即「目标金额」，题目要求我们计算凑出目标金额所需的最少硬币数量。\n所以我们可以这样定义 dp 函数：dp(n) 表示，输入一个目标金额 n，返回凑出目标金额 n 所需的最少硬币数量。\nDown to Top\n当然，我们也可以自底向上使用 dp table 来消除重叠子问题，关于「状态」「选择」和 base case 与之前没有区别，dp 数组的定义和刚才 dp 函数类似，也是把「状态」，也就是目标金额作为变量。不过 dp 函数体现在函数参数，而 dp 数组体现在数组索引：\ndp 数组的定义：当目标金额为 i 时，至少需要 dp[i] 枚硬币凑出。\n\nProblems\nThere are some types, classic dp problems, such as \n\nSub Sequence Problems\nKnapsack Problems\nGreedy Related Problems\n\nProblems - Sub Sequences\nThinking Patterns\nUsually there 2 templates for sub sequences problems, \n\n一个一维的 dp 数组：\nint n = array.length;\nint[] dp = new int[n];\nfor (int i = 1; i 最长递增子序列 和 最大子数组和 都是这个思路。\n在这个思路中 dp 数组的定义是：\n在子数组arr[0..i]中，以arr[i]结尾的子序列的(最值)长度是dp[i] ==> Why not define it as `the LIS of arr[0...i]? Refer to 1.\nFor example, 300. Longest Increasing Subsequence and 53. Maximum Subarray\n第二种思路模板是一个二维的 dp 数组：\nn := len(arr)\ndp := make([][]int, n)\n// 初始化 dp 数组\nfor i := 0; i 涉及两个字符串/数组的场景，dp 数组的定义如下：\n在子数组arr1[0..i]和子数组arr2[0..j]中，我们要求的子序列长度为dp[i][j]\nFor example, 1143. Longest Common Subsequence and 72. Edit Distance\n只涉及一个字符串/数组的场景，dp 数组的定义如下：\n在 子数组 array[i..j] 中，我们要求的子序列的长度为 dp[i][j]。\nFor example, 516. Longest Palindromic Subsequence\n\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n673. Number of Longest Increasing Subsequence\n1. DP  2. BIT\n1. DP  * How to setup/update dp array for dpCount?\ncode\n\n\n\n300. Longest Increasing Subsequence\n* DP\n How to define the dp table  Compress space complexity\ncode\n\n\n\n53. Maximum Subarray\n1. DP 2. Sliding Window  3. Prefix Sum\n How to define the dp table  Compress space complexity\ncode\n\n\n\n72. Edit Distance\n1. DP table 2-D DP table  2. DP function\n How to define dp function How to define DP table * how to compress space with O(N)\ncode\n\n\n\n1143. Longest Common Subsequence\n1. DP table 2-D DP table  2. DP function\n How to define dp function How to define DP table  how to compress space with O(N) DP 2-D DP table\ncode\nAlmost same as problem 72.\n\n\n583. Delete Operation for Two Strings\n1. DP table 2-D DP table  2. DP function\n* The problem is actually to calculate the LCS of two strings.\ncode\nAlmost same as problem 1143.\n\n\n712. Minimum ASCII Delete Sum for Two Strings\n1. DP function.  2. DP 2-D table.  3. DP 1-D table.\n* dp[i][j] means min sum of s1[0...i] and s2[0...j]\ncode\nUse DP table record the sum\n\n\n\nReference\n\nhttps://labuladong.online/algo/dynamic-programming/maximum-subarray/\n\nProblems - Knapsack Problems\nThinking Patterns\nHow connect Knapsack Problems with Dynamic Programming framework?\na. Status and Choice\n\n先说状态，如何才能描述一个问题局面？只要给几个物品和一个背包的容量限制，就形成了一个背包问题呀。所以状态有两个，就是「背包的容量」和「可选择的物品」。\n再说选择，也很容易想到啊，对于每件物品，你能选择什么？选择就是「装进背包」或者「不装进背包」。\n明白了状态和选择，动态规划问题基本上就解决了，对于自底向上的思考方式，代码的一般框架是这样：\nfor 状态1 in 状态1的所有取值：\n  for 状态2 in 状态2的所有取值：\n     for ...\n           dp[状态1][状态2][...] = 择优(选择1，选择2...)\n\nb. Definition of DP table\n\n首先看看刚才找到的「状态」，有两个，也就是说我们需要一个二维dp数组。\ndp[i][w]的定义如下：对于前i个物品，当前背包的容量为w，这种情况下可以装的最大价值是dp[i][w]。\n比如说，如果dp[3][5] = 6，其含义为：对于给定的一系列物品中，若只对前3个物品进行选择，当背包容量为5时，最多可以装下的价值为6。\n根据这个定义，我们想求的最终答案就是 dp[N][W]。base case 就是 dp[0][..] = dp[..][0] = 0，因为没有物品或者背包没有空间的时候，能装的最大价值就是0。\nint[][] dp[N+1][W+1]\ndp[0][..] = 0\ndp[..][0] = 0\n\nfor i in [1..N]:\n    for w in [1..W]:\n        dp[i][w] = max(\n            把物品 i 装进背包,\n          不把物品 i 装进背包\n        )\nreturn dp[N][W]\n\nc. How does the status change based on the choice?\n\n如果没有把这第 i 个物品装入背包，那么很显然，最大价值 dp[i][w] 应该等于 dp[i-1][w]，继承之前的结果。\n如果把这第 i 个物品装入了背包，那么 dp[i][w] 应该等于 val[i-1] + dp[i-1][w - wt[i-1]]。\n首先，由于数组索引从0开始，而我们定义中的i是从1开始计数的，所以val[i-1]和wt[i-1]表示第i个物品的价值和重量。\n如果选择将第i个物品装进背包，那么第i个物品的价值val[i-1] 肯定就到手了，接下来你就要在剩余容量w-wt[i-1]的限制下，在前i-1个物品中挑选，求最大价值，即dp[i-1][w - wt[i-1]]。\ncode about the status change\nfor i in [1..N]:\n  for w in [1..W]:\n       dp[i][w] = max(\n          dp[i-1][w],\n          dp[i-1][w - wt[i-1]] + val[i-1]\n      )\nreturn dp[N][W]\n\nd. Finally, we got the code framework for 0-1 Knapsack Problem\nfunc knapsack(wt, val []int) int {\n    // base case 已初始化\n    dp := make([][]int, len(wt)+1)\n    for i := range dp {\n        dp[i] = make([]int, len(wt)+1)\n    }\n    for i := 1; i  b {\n        return a\n    }\n    return b\n}\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n416. Partition Equal Subset Sum\n1. 2-D DP table  2. 1-D DP table\n* How to connect the problem with Knapsack Problem?\ncode\n-\n\n\n518. Coin Change II\n1. 2-D DP table  2. 1-D DP table\n* The difference from change coin I\ncode\n-\n\n\n494. Target Sum\n1. 2-D DP  2. 1-D DP table  3. Backtrack\n* The base case. dp[1...N][0] not equal to 0\ncode\n-\n\n\n\nReferences\n\n0-1 Knapsack Problem.\nSubset Knapsack Problem\nComplete Knapsack Problem\nhttps://labuladong.online/algo/dynamic-programming/target-sum/\n\n"},"02-algorithms/101-parenthese_problems.html":{"url":"02-algorithms/101-parenthese_problems.html","title":"Parenthese Problems","keywords":"","body":"Parentheses Problems\nKey Points\nThere are mainly 2 type problems relevant to parentheses\n\nCheck if the parentheses in string are valid. Usually can be resolved with stack\nGenerate valid parentheses in string. Usually can be resolve with backtrack\n\nThinking Patterns\n\nHow to check if a string is valid parentheses? \n a. The number of '(' and ')' should be same, and,\n b. They must be in pair. To be more specific, there should be NO leading ')', and NO open '('\n\nHow to utilized stack.\n a. Empty stack + ')', means leading ')'\n b. Non-Empty stack + the end, means open '('\n\n\nAn Example\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n20. Valid Parentheses\nKP in code\n\ntype 1\n\n\n\n1249. Minimum Remove to Make Valid Parentheses\nStack\n\ncode\n\n\n\n32. Longest Valid Parentheses\n\n stack   Dynamic Programming\ntype 1\n\n\n\n921. Minimum Add to Make Parentheses Valid\nKP in code\n\ntype 1\n\n\n\n1541. Minimum Insertions to Balance a Parentheses String\n\n\n type 1   TODO: Questions in the code.\n\n\n\n22. Generate Parentheses\nKP in code\nbacktrack\ntype 2\n-\n\n\n\nReferences\n\nhttps://labuladong.online/algo/frequency-interview/bracket-problems-summary/\nhttps://labuladong.online/algo/essential-technique/backtrack-framework/\nhttps://labuladong.online/algo/practice-in-action/generate-parentheses/\n\n"},"02-algorithms/200-math_problems.html":{"url":"02-algorithms/200-math_problems.html","title":"Math Problems","keywords":"","body":"Math Related Problems\nKey Points\n\nEdged Case\n\nCase of overflow\n\n\nPerformance\n\nUtilize bit operation for Power calculation.\n\n\n\nProblems\nProblems - Mod & Power Problems\nKey Points\n\nAbout Mod. A*B % k = (A % k) * (B % k) % K\nQuick Power, for Power(x, n). O(N) => O(lgN)\nif n % 2 == 1, => x * Power(x, n-1)\nif n % 2 == 0, => Power(Power(x, n/2), 2)\n\n\n\nProblems\n\n\n\nProblems\nPossible Solutions\nKey Points\nCode\nComments\n\n\n\n\n50. Pow(x, n)\n\n1. If n == math.MinInt32  2. If n is very large, how to reduce the time complexity?\ncode\n-\n\n\n372. Super Pow\n\n1. Iteration or Recursion for the array. 2. Utilize bit operation for Power calculation\ncode\n-\n\n\n\nReferences\n\nMod Problems\n\n"}}}